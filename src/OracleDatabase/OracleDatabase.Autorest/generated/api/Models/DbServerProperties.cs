// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>DbServer resource properties</summary>
    public partial class DbServerProperties :
        Sample.API.Models.IDbServerProperties,
        Sample.API.Models.IDbServerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AutonomousVMClusterIds" /> property.</summary>
        private System.Collections.Generic.List<string> _autonomousVMClusterIds;

        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> AutonomousVMClusterIds { get => this._autonomousVMClusterIds; }

        /// <summary>Backing field for <see cref="AutonomousVirtualMachineIds" /> property.</summary>
        private System.Collections.Generic.List<string> _autonomousVirtualMachineIds;

        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> AutonomousVirtualMachineIds { get => this._autonomousVirtualMachineIds; }

        /// <summary>Backing field for <see cref="CompartmentId" /> property.</summary>
        private string _compartmentId;

        /// <summary>The OCID of the compartment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string CompartmentId { get => this._compartmentId; }

        /// <summary>Backing field for <see cref="CpuCoreCount" /> property.</summary>
        private int? _cpuCoreCount;

        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? CpuCoreCount { get => this._cpuCoreCount; }

        /// <summary>Backing field for <see cref="DbNodeIds" /> property.</summary>
        private System.Collections.Generic.List<string> _dbNodeIds;

        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> DbNodeIds { get => this._dbNodeIds; }

        /// <summary>Backing field for <see cref="DbNodeStorageSizeInGbs" /> property.</summary>
        private int? _dbNodeStorageSizeInGbs;

        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? DbNodeStorageSizeInGbs { get => this._dbNodeStorageSizeInGbs; }

        /// <summary>Estimated Patch Duration</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? DbServerPatchingDetailEstimatedPatchDuration { get => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).EstimatedPatchDuration; }

        /// <summary>Patching Status</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DbServerPatchingDetailPatchingStatus { get => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).PatchingStatus; }

        /// <summary>Time Patching Ended</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).TimePatchingEnded; }

        /// <summary>Time Patching Started</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).TimePatchingStarted; }

        /// <summary>Backing field for <see cref="DbServerPatchingDetails" /> property.</summary>
        private Sample.API.Models.IDbServerPatchingDetails _dbServerPatchingDetails;

        /// <summary>dbServerPatching details of the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IDbServerPatchingDetails DbServerPatchingDetails { get => (this._dbServerPatchingDetails = this._dbServerPatchingDetails ?? new Sample.API.Models.DbServerPatchingDetails()); }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The name for the Db Server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="ExadataInfrastructureId" /> property.</summary>
        private string _exadataInfrastructureId;

        /// <summary>The OCID of the Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string ExadataInfrastructureId { get => this._exadataInfrastructureId; }

        /// <summary>Backing field for <see cref="LifecycleDetails" /> property.</summary>
        private string _lifecycleDetails;

        /// <summary>Lifecycle details of dbServer.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string LifecycleDetails { get => this._lifecycleDetails; }

        /// <summary>Backing field for <see cref="LifecycleState" /> property.</summary>
        private string _lifecycleState;

        /// <summary>DbServer provisioning state.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string LifecycleState { get => this._lifecycleState; }

        /// <summary>Backing field for <see cref="MaxCpuCount" /> property.</summary>
        private int? _maxCpuCount;

        /// <summary>The total number of CPU cores available.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? MaxCpuCount { get => this._maxCpuCount; }

        /// <summary>Backing field for <see cref="MaxDbNodeStorageInGbs" /> property.</summary>
        private int? _maxDbNodeStorageInGbs;

        /// <summary>The total max dbNode storage in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? MaxDbNodeStorageInGbs { get => this._maxDbNodeStorageInGbs; }

        /// <summary>Backing field for <see cref="MaxMemoryInGbs" /> property.</summary>
        private int? _maxMemoryInGbs;

        /// <summary>The total memory available in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? MaxMemoryInGbs { get => this._maxMemoryInGbs; }

        /// <summary>Backing field for <see cref="MemorySizeInGbs" /> property.</summary>
        private int? _memorySizeInGbs;

        /// <summary>The total memory size in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? MemorySizeInGbs { get => this._memorySizeInGbs; }

        /// <summary>Backing field for <see cref="Ocid" /> property.</summary>
        private string _ocid;

        /// <summary>Db server name.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Ocid { get => this._ocid; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Azure resource provisioning state.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Internal Acessors for AutonomousVMClusterIds</summary>
        System.Collections.Generic.List<string> Sample.API.Models.IDbServerPropertiesInternal.AutonomousVMClusterIds { get => this._autonomousVMClusterIds; set { {_autonomousVMClusterIds = value;} } }

        /// <summary>Internal Acessors for AutonomousVirtualMachineIds</summary>
        System.Collections.Generic.List<string> Sample.API.Models.IDbServerPropertiesInternal.AutonomousVirtualMachineIds { get => this._autonomousVirtualMachineIds; set { {_autonomousVirtualMachineIds = value;} } }

        /// <summary>Internal Acessors for CompartmentId</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.CompartmentId { get => this._compartmentId; set { {_compartmentId = value;} } }

        /// <summary>Internal Acessors for CpuCoreCount</summary>
        int? Sample.API.Models.IDbServerPropertiesInternal.CpuCoreCount { get => this._cpuCoreCount; set { {_cpuCoreCount = value;} } }

        /// <summary>Internal Acessors for DbNodeIds</summary>
        System.Collections.Generic.List<string> Sample.API.Models.IDbServerPropertiesInternal.DbNodeIds { get => this._dbNodeIds; set { {_dbNodeIds = value;} } }

        /// <summary>Internal Acessors for DbNodeStorageSizeInGbs</summary>
        int? Sample.API.Models.IDbServerPropertiesInternal.DbNodeStorageSizeInGbs { get => this._dbNodeStorageSizeInGbs; set { {_dbNodeStorageSizeInGbs = value;} } }

        /// <summary>Internal Acessors for DbServerPatchingDetailEstimatedPatchDuration</summary>
        int? Sample.API.Models.IDbServerPropertiesInternal.DbServerPatchingDetailEstimatedPatchDuration { get => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).EstimatedPatchDuration; set => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).EstimatedPatchDuration = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailPatchingStatus</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.DbServerPatchingDetailPatchingStatus { get => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).PatchingStatus; set => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).PatchingStatus = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailTimePatchingEnded</summary>
        global::System.DateTime? Sample.API.Models.IDbServerPropertiesInternal.DbServerPatchingDetailTimePatchingEnded { get => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).TimePatchingEnded; set => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).TimePatchingEnded = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailTimePatchingStarted</summary>
        global::System.DateTime? Sample.API.Models.IDbServerPropertiesInternal.DbServerPatchingDetailTimePatchingStarted { get => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).TimePatchingStarted; set => ((Sample.API.Models.IDbServerPatchingDetailsInternal)DbServerPatchingDetails).TimePatchingStarted = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetails</summary>
        Sample.API.Models.IDbServerPatchingDetails Sample.API.Models.IDbServerPropertiesInternal.DbServerPatchingDetails { get => (this._dbServerPatchingDetails = this._dbServerPatchingDetails ?? new Sample.API.Models.DbServerPatchingDetails()); set { {_dbServerPatchingDetails = value;} } }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for ExadataInfrastructureId</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.ExadataInfrastructureId { get => this._exadataInfrastructureId; set { {_exadataInfrastructureId = value;} } }

        /// <summary>Internal Acessors for LifecycleDetails</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.LifecycleDetails { get => this._lifecycleDetails; set { {_lifecycleDetails = value;} } }

        /// <summary>Internal Acessors for LifecycleState</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.LifecycleState { get => this._lifecycleState; set { {_lifecycleState = value;} } }

        /// <summary>Internal Acessors for MaxCpuCount</summary>
        int? Sample.API.Models.IDbServerPropertiesInternal.MaxCpuCount { get => this._maxCpuCount; set { {_maxCpuCount = value;} } }

        /// <summary>Internal Acessors for MaxDbNodeStorageInGbs</summary>
        int? Sample.API.Models.IDbServerPropertiesInternal.MaxDbNodeStorageInGbs { get => this._maxDbNodeStorageInGbs; set { {_maxDbNodeStorageInGbs = value;} } }

        /// <summary>Internal Acessors for MaxMemoryInGbs</summary>
        int? Sample.API.Models.IDbServerPropertiesInternal.MaxMemoryInGbs { get => this._maxMemoryInGbs; set { {_maxMemoryInGbs = value;} } }

        /// <summary>Internal Acessors for MemorySizeInGbs</summary>
        int? Sample.API.Models.IDbServerPropertiesInternal.MemorySizeInGbs { get => this._memorySizeInGbs; set { {_memorySizeInGbs = value;} } }

        /// <summary>Internal Acessors for Ocid</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.Ocid { get => this._ocid; set { {_ocid = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Shape</summary>
        string Sample.API.Models.IDbServerPropertiesInternal.Shape { get => this._shape; set { {_shape = value;} } }

        /// <summary>Internal Acessors for TimeCreated</summary>
        global::System.DateTime? Sample.API.Models.IDbServerPropertiesInternal.TimeCreated { get => this._timeCreated; set { {_timeCreated = value;} } }

        /// <summary>Internal Acessors for VMClusterIds</summary>
        System.Collections.Generic.List<string> Sample.API.Models.IDbServerPropertiesInternal.VMClusterIds { get => this._vMClusterIds; set { {_vMClusterIds = value;} } }

        /// <summary>Backing field for <see cref="Shape" /> property.</summary>
        private string _shape;

        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Shape { get => this._shape; }

        /// <summary>Backing field for <see cref="TimeCreated" /> property.</summary>
        private global::System.DateTime? _timeCreated;

        /// <summary>The date and time that the Db Server was created.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public global::System.DateTime? TimeCreated { get => this._timeCreated; }

        /// <summary>Backing field for <see cref="VMClusterIds" /> property.</summary>
        private System.Collections.Generic.List<string> _vMClusterIds;

        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> VMClusterIds { get => this._vMClusterIds; }

        /// <summary>Creates an new <see cref="DbServerProperties" /> instance.</summary>
        public DbServerProperties()
        {

        }
    }
    /// DbServer resource properties
    public partial interface IDbServerProperties :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The list of OCIDs of the Autonomous VM Clusters associated with the Db server.",
        SerializedName = @"autonomousVmClusterIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AutonomousVMClusterIds { get;  }
        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.",
        SerializedName = @"autonomousVirtualMachineIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AutonomousVirtualMachineIds { get;  }
        /// <summary>The OCID of the compartment.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the compartment.",
        SerializedName = @"compartmentId",
        PossibleTypes = new [] { typeof(string) })]
        string CompartmentId { get;  }
        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of CPU cores enabled on the Db server.",
        SerializedName = @"cpuCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCoreCount { get;  }
        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the Db nodes associated with the Db server.",
        SerializedName = @"dbNodeIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DbNodeIds { get;  }
        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The allocated local node storage in GBs on the Db server.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGbs { get;  }
        /// <summary>Estimated Patch Duration</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Estimated Patch Duration",
        SerializedName = @"estimatedPatchDuration",
        PossibleTypes = new [] { typeof(int) })]
        int? DbServerPatchingDetailEstimatedPatchDuration { get;  }
        /// <summary>Patching Status</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Patching Status",
        SerializedName = @"patchingStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Scheduled", "MaintenanceInProgress", "Failed", "Complete")]
        string DbServerPatchingDetailPatchingStatus { get;  }
        /// <summary>Time Patching Ended</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Time Patching Ended",
        SerializedName = @"timePatchingEnded",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get;  }
        /// <summary>Time Patching Started</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Time Patching Started",
        SerializedName = @"timePatchingStarted",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get;  }
        /// <summary>The name for the Db Server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name for the Db Server.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>The OCID of the Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the Exadata infrastructure.",
        SerializedName = @"exadataInfrastructureId",
        PossibleTypes = new [] { typeof(string) })]
        string ExadataInfrastructureId { get;  }
        /// <summary>Lifecycle details of dbServer.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Lifecycle details of dbServer.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetails { get;  }
        /// <summary>DbServer provisioning state.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"DbServer provisioning state.",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Creating", "Available", "Unavailable", "Deleting", "Deleted", "MaintenanceInProgress")]
        string LifecycleState { get;  }
        /// <summary>The total number of CPU cores available.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of CPU cores available.",
        SerializedName = @"maxCpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCpuCount { get;  }
        /// <summary>The total max dbNode storage in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total max dbNode storage in GBs.",
        SerializedName = @"maxDbNodeStorageInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDbNodeStorageInGbs { get;  }
        /// <summary>The total memory available in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total memory available in GBs.",
        SerializedName = @"maxMemoryInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxMemoryInGbs { get;  }
        /// <summary>The total memory size in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total memory size in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGbs { get;  }
        /// <summary>Db server name.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Db server name.",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>Azure resource provisioning state.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Azure resource provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string ProvisioningState { get;  }
        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.",
        SerializedName = @"shape",
        PossibleTypes = new [] { typeof(string) })]
        string Shape { get;  }
        /// <summary>The date and time that the Db Server was created.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The date and time that the Db Server was created.",
        SerializedName = @"timeCreated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeCreated { get;  }
        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the VM Clusters associated with the Db server.",
        SerializedName = @"vmClusterIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> VMClusterIds { get;  }

    }
    /// DbServer resource properties
    internal partial interface IDbServerPropertiesInternal

    {
        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        System.Collections.Generic.List<string> AutonomousVMClusterIds { get; set; }
        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        System.Collections.Generic.List<string> AutonomousVirtualMachineIds { get; set; }
        /// <summary>The OCID of the compartment.</summary>
        string CompartmentId { get; set; }
        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        int? CpuCoreCount { get; set; }
        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        System.Collections.Generic.List<string> DbNodeIds { get; set; }
        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        int? DbNodeStorageSizeInGbs { get; set; }
        /// <summary>Estimated Patch Duration</summary>
        int? DbServerPatchingDetailEstimatedPatchDuration { get; set; }
        /// <summary>Patching Status</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Scheduled", "MaintenanceInProgress", "Failed", "Complete")]
        string DbServerPatchingDetailPatchingStatus { get; set; }
        /// <summary>Time Patching Ended</summary>
        global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get; set; }
        /// <summary>Time Patching Started</summary>
        global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get; set; }
        /// <summary>dbServerPatching details of the Db server.</summary>
        Sample.API.Models.IDbServerPatchingDetails DbServerPatchingDetails { get; set; }
        /// <summary>The name for the Db Server.</summary>
        string DisplayName { get; set; }
        /// <summary>The OCID of the Exadata infrastructure.</summary>
        string ExadataInfrastructureId { get; set; }
        /// <summary>Lifecycle details of dbServer.</summary>
        string LifecycleDetails { get; set; }
        /// <summary>DbServer provisioning state.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Creating", "Available", "Unavailable", "Deleting", "Deleted", "MaintenanceInProgress")]
        string LifecycleState { get; set; }
        /// <summary>The total number of CPU cores available.</summary>
        int? MaxCpuCount { get; set; }
        /// <summary>The total max dbNode storage in GBs.</summary>
        int? MaxDbNodeStorageInGbs { get; set; }
        /// <summary>The total memory available in GBs.</summary>
        int? MaxMemoryInGbs { get; set; }
        /// <summary>The total memory size in GBs.</summary>
        int? MemorySizeInGbs { get; set; }
        /// <summary>Db server name.</summary>
        string Ocid { get; set; }
        /// <summary>Azure resource provisioning state.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string ProvisioningState { get; set; }
        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        string Shape { get; set; }
        /// <summary>The date and time that the Db Server was created.</summary>
        global::System.DateTime? TimeCreated { get; set; }
        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        System.Collections.Generic.List<string> VMClusterIds { get; set; }

    }
}