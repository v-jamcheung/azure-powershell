// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>DbServer Patching Properties</summary>
    public partial class DbServerPatchingDetails :
        Sample.API.Models.IDbServerPatchingDetails,
        Sample.API.Models.IDbServerPatchingDetailsInternal
    {

        /// <summary>Backing field for <see cref="EstimatedPatchDuration" /> property.</summary>
        private int? _estimatedPatchDuration;

        /// <summary>Estimated Patch Duration</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? EstimatedPatchDuration { get => this._estimatedPatchDuration; }

        /// <summary>Backing field for <see cref="PatchingStatus" /> property.</summary>
        private string _patchingStatus;

        /// <summary>Patching Status</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string PatchingStatus { get => this._patchingStatus; }

        /// <summary>Internal Acessors for EstimatedPatchDuration</summary>
        int? Sample.API.Models.IDbServerPatchingDetailsInternal.EstimatedPatchDuration { get => this._estimatedPatchDuration; set { {_estimatedPatchDuration = value;} } }

        /// <summary>Internal Acessors for PatchingStatus</summary>
        string Sample.API.Models.IDbServerPatchingDetailsInternal.PatchingStatus { get => this._patchingStatus; set { {_patchingStatus = value;} } }

        /// <summary>Internal Acessors for TimePatchingEnded</summary>
        global::System.DateTime? Sample.API.Models.IDbServerPatchingDetailsInternal.TimePatchingEnded { get => this._timePatchingEnded; set { {_timePatchingEnded = value;} } }

        /// <summary>Internal Acessors for TimePatchingStarted</summary>
        global::System.DateTime? Sample.API.Models.IDbServerPatchingDetailsInternal.TimePatchingStarted { get => this._timePatchingStarted; set { {_timePatchingStarted = value;} } }

        /// <summary>Backing field for <see cref="TimePatchingEnded" /> property.</summary>
        private global::System.DateTime? _timePatchingEnded;

        /// <summary>Time Patching Ended</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public global::System.DateTime? TimePatchingEnded { get => this._timePatchingEnded; }

        /// <summary>Backing field for <see cref="TimePatchingStarted" /> property.</summary>
        private global::System.DateTime? _timePatchingStarted;

        /// <summary>Time Patching Started</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public global::System.DateTime? TimePatchingStarted { get => this._timePatchingStarted; }

        /// <summary>Creates an new <see cref="DbServerPatchingDetails" /> instance.</summary>
        public DbServerPatchingDetails()
        {

        }
    }
    /// DbServer Patching Properties
    public partial interface IDbServerPatchingDetails :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>Estimated Patch Duration</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Estimated Patch Duration",
        SerializedName = @"estimatedPatchDuration",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchDuration { get;  }
        /// <summary>Patching Status</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Patching Status",
        SerializedName = @"patchingStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Scheduled", "MaintenanceInProgress", "Failed", "Complete")]
        string PatchingStatus { get;  }
        /// <summary>Time Patching Ended</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Time Patching Ended",
        SerializedName = @"timePatchingEnded",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimePatchingEnded { get;  }
        /// <summary>Time Patching Started</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Time Patching Started",
        SerializedName = @"timePatchingStarted",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimePatchingStarted { get;  }

    }
    /// DbServer Patching Properties
    internal partial interface IDbServerPatchingDetailsInternal

    {
        /// <summary>Estimated Patch Duration</summary>
        int? EstimatedPatchDuration { get; set; }
        /// <summary>Patching Status</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Scheduled", "MaintenanceInProgress", "Failed", "Complete")]
        string PatchingStatus { get; set; }
        /// <summary>Time Patching Ended</summary>
        global::System.DateTime? TimePatchingEnded { get; set; }
        /// <summary>Time Patching Started</summary>
        global::System.DateTime? TimePatchingStarted { get; set; }

    }
}