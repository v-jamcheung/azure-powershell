// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>DbSystemShape resource definition</summary>
    public partial class DbSystemShape :
        Sample.API.Models.IDbSystemShape,
        Sample.API.Models.IDbSystemShapeInternal,
        Sample.API.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Sample.API.Models.IProxyResource" />
        /// </summary>
        private Sample.API.Models.IProxyResource __proxyResource = new Sample.API.Models.ProxyResource();

        /// <summary>
        /// The maximum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AvailableCoreCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableCoreCount; }

        /// <summary>
        /// The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata
        /// shape and ExaCC Elastic shapes.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AvailableCoreCountPerNode { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableCoreCountPerNode; }

        /// <summary>The maximum DATA storage that can be enabled for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AvailableDataStorageInTbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDataStorageInTbs; }

        /// <summary>
        /// The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public double? AvailableDataStoragePerServerInTbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDataStoragePerServerInTbs; }

        /// <summary>
        /// The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AvailableDbNodePerNodeInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDbNodePerNodeInGbs; }

        /// <summary>The maximum Db Node storage that can be enabled for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AvailableDbNodeStorageInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDbNodeStorageInGbs; }

        /// <summary>The maximum memory that can be enabled for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AvailableMemoryInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableMemoryInGbs; }

        /// <summary>
        /// The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AvailableMemoryPerNodeInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableMemoryPerNodeInGbs; }

        /// <summary>
        /// The discrete number by which the CPU core count for this shape can be increased or decreased.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? CoreCountIncrement { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).CoreCountIncrement; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Id { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>
        /// The maximum number of Exadata storage servers available for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaxStorageCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MaxStorageCount; }

        /// <summary>The maximum number of database nodes available for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaximumNodeCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MaximumNodeCount; }

        /// <summary>The minimum number of CPU cores that can be enabled per node for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MinCoreCountPerNode { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinCoreCountPerNode; }

        /// <summary>The minimum data storage that need be allocated for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MinDataStorageInTbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinDataStorageInTbs; }

        /// <summary>The minimum Db Node storage that need be allocated per node for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MinDbNodeStoragePerNodeInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinDbNodeStoragePerNodeInGbs; }

        /// <summary>The minimum memory that need be allocated per node for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MinMemoryPerNodeInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinMemoryPerNodeInGbs; }

        /// <summary>
        /// The minimum number of Exadata storage servers available for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MinStorageCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinStorageCount; }

        /// <summary>
        /// The minimum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MinimumCoreCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinimumCoreCount; }

        /// <summary>The minimum number of database nodes available for this shape.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MinimumNodeCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinimumNodeCount; }

        /// <summary>The name of the resource</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Name { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>Backing field for <see cref="Properties" /> property.</summary>
        private Sample.API.Models.IDbSystemShapeProperties _properties;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IDbSystemShapeProperties Properties { get => (this._properties = this._properties ?? new Sample.API.Models.DbSystemShapeProperties()); set => this._properties = value; }

        /// <summary>
        /// The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? RuntimeMinimumCoreCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).RuntimeMinimumCoreCount; }

        /// <summary>Internal Acessors for AvailableCoreCount</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.AvailableCoreCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableCoreCount; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableCoreCount = (int) value; }

        /// <summary>Internal Acessors for AvailableCoreCountPerNode</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.AvailableCoreCountPerNode { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableCoreCountPerNode; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableCoreCountPerNode = value; }

        /// <summary>Internal Acessors for AvailableDataStorageInTbs</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.AvailableDataStorageInTbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDataStorageInTbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDataStorageInTbs = value; }

        /// <summary>Internal Acessors for AvailableDataStoragePerServerInTbs</summary>
        double? Sample.API.Models.IDbSystemShapeInternal.AvailableDataStoragePerServerInTbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDataStoragePerServerInTbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDataStoragePerServerInTbs = value; }

        /// <summary>Internal Acessors for AvailableDbNodePerNodeInGbs</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.AvailableDbNodePerNodeInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDbNodePerNodeInGbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDbNodePerNodeInGbs = value; }

        /// <summary>Internal Acessors for AvailableDbNodeStorageInGbs</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.AvailableDbNodeStorageInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDbNodeStorageInGbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableDbNodeStorageInGbs = value; }

        /// <summary>Internal Acessors for AvailableMemoryInGbs</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.AvailableMemoryInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableMemoryInGbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableMemoryInGbs = value; }

        /// <summary>Internal Acessors for AvailableMemoryPerNodeInGbs</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.AvailableMemoryPerNodeInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableMemoryPerNodeInGbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).AvailableMemoryPerNodeInGbs = value; }

        /// <summary>Internal Acessors for CoreCountIncrement</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.CoreCountIncrement { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).CoreCountIncrement; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).CoreCountIncrement = value; }

        /// <summary>Internal Acessors for MaxStorageCount</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MaxStorageCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MaxStorageCount; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MaxStorageCount = value; }

        /// <summary>Internal Acessors for MaximumNodeCount</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MaximumNodeCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MaximumNodeCount; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MaximumNodeCount = value; }

        /// <summary>Internal Acessors for MinCoreCountPerNode</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MinCoreCountPerNode { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinCoreCountPerNode; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinCoreCountPerNode = value; }

        /// <summary>Internal Acessors for MinDataStorageInTbs</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MinDataStorageInTbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinDataStorageInTbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinDataStorageInTbs = value; }

        /// <summary>Internal Acessors for MinDbNodeStoragePerNodeInGbs</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MinDbNodeStoragePerNodeInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinDbNodeStoragePerNodeInGbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinDbNodeStoragePerNodeInGbs = value; }

        /// <summary>Internal Acessors for MinMemoryPerNodeInGbs</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MinMemoryPerNodeInGbs { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinMemoryPerNodeInGbs; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinMemoryPerNodeInGbs = value; }

        /// <summary>Internal Acessors for MinStorageCount</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MinStorageCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinStorageCount; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinStorageCount = value; }

        /// <summary>Internal Acessors for MinimumCoreCount</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MinimumCoreCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinimumCoreCount; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinimumCoreCount = value; }

        /// <summary>Internal Acessors for MinimumNodeCount</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.MinimumNodeCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinimumNodeCount; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).MinimumNodeCount = value; }

        /// <summary>Internal Acessors for Properties</summary>
        Sample.API.Models.IDbSystemShapeProperties Sample.API.Models.IDbSystemShapeInternal.Properties { get => (this._properties = this._properties ?? new Sample.API.Models.DbSystemShapeProperties()); set { {_properties = value;} } }

        /// <summary>Internal Acessors for RuntimeMinimumCoreCount</summary>
        int? Sample.API.Models.IDbSystemShapeInternal.RuntimeMinimumCoreCount { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).RuntimeMinimumCoreCount; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).RuntimeMinimumCoreCount = value; }

        /// <summary>Internal Acessors for ShapeFamily</summary>
        string Sample.API.Models.IDbSystemShapeInternal.ShapeFamily { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).ShapeFamily; set => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).ShapeFamily = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Sample.API.Models.IResourceInternal.Id { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Id; set => ((Sample.API.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Sample.API.Models.IResourceInternal.Name { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Name; set => ((Sample.API.Models.IResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Sample.API.Models.ISystemData Sample.API.Models.IResourceInternal.SystemData { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemData; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Sample.API.Models.IResourceInternal.Type { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Type; set => ((Sample.API.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>The family of the shape used for the DB system.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string ShapeFamily { get => ((Sample.API.Models.IDbSystemShapePropertiesInternal)Properties).ShapeFamily; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        internal Sample.API.Models.ISystemData SystemData { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Type { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="DbSystemShape" /> instance.</summary>
        public DbSystemShape()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Sample.API.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Sample.API.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// DbSystemShape resource definition
    public partial interface IDbSystemShape :
        Sample.API.Runtime.IJsonSerializable,
        Sample.API.Models.IProxyResource
    {
        /// <summary>
        /// The maximum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum number of CPU cores that can be enabled on the DB system for this shape.",
        SerializedName = @"availableCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableCoreCount { get;  }
        /// <summary>
        /// The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata
        /// shape and ExaCC Elastic shapes.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes.",
        SerializedName = @"availableCoreCountPerNode",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableCoreCountPerNode { get;  }
        /// <summary>The maximum DATA storage that can be enabled for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum DATA storage that can be enabled for this shape.",
        SerializedName = @"availableDataStorageInTbs",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableDataStorageInTbs { get;  }
        /// <summary>
        /// The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.",
        SerializedName = @"availableDataStoragePerServerInTbs",
        PossibleTypes = new [] { typeof(double) })]
        double? AvailableDataStoragePerServerInTbs { get;  }
        /// <summary>
        /// The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.",
        SerializedName = @"availableDbNodePerNodeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableDbNodePerNodeInGbs { get;  }
        /// <summary>The maximum Db Node storage that can be enabled for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum Db Node storage that can be enabled for this shape.",
        SerializedName = @"availableDbNodeStorageInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableDbNodeStorageInGbs { get;  }
        /// <summary>The maximum memory that can be enabled for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum memory that can be enabled for this shape.",
        SerializedName = @"availableMemoryInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableMemoryInGbs { get;  }
        /// <summary>
        /// The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.",
        SerializedName = @"availableMemoryPerNodeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableMemoryPerNodeInGbs { get;  }
        /// <summary>
        /// The discrete number by which the CPU core count for this shape can be increased or decreased.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The discrete number by which the CPU core count for this shape can be increased or decreased.",
        SerializedName = @"coreCountIncrement",
        PossibleTypes = new [] { typeof(int) })]
        int? CoreCountIncrement { get;  }
        /// <summary>
        /// The maximum number of Exadata storage servers available for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum number of Exadata storage servers available for the Exadata infrastructure.",
        SerializedName = @"maxStorageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxStorageCount { get;  }
        /// <summary>The maximum number of database nodes available for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum number of database nodes available for this shape.",
        SerializedName = @"maximumNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaximumNodeCount { get;  }
        /// <summary>The minimum number of CPU cores that can be enabled per node for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum number of CPU cores that can be enabled per node for this shape.",
        SerializedName = @"minCoreCountPerNode",
        PossibleTypes = new [] { typeof(int) })]
        int? MinCoreCountPerNode { get;  }
        /// <summary>The minimum data storage that need be allocated for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum data storage that need be allocated for this shape.",
        SerializedName = @"minDataStorageInTbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MinDataStorageInTbs { get;  }
        /// <summary>The minimum Db Node storage that need be allocated per node for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum Db Node storage that need be allocated per node for this shape.",
        SerializedName = @"minDbNodeStoragePerNodeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MinDbNodeStoragePerNodeInGbs { get;  }
        /// <summary>The minimum memory that need be allocated per node for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum memory that need be allocated per node for this shape.",
        SerializedName = @"minMemoryPerNodeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MinMemoryPerNodeInGbs { get;  }
        /// <summary>
        /// The minimum number of Exadata storage servers available for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum number of Exadata storage servers available for the Exadata infrastructure.",
        SerializedName = @"minStorageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MinStorageCount { get;  }
        /// <summary>
        /// The minimum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum number of CPU cores that can be enabled on the DB system for this shape.",
        SerializedName = @"minimumCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MinimumCoreCount { get;  }
        /// <summary>The minimum number of database nodes available for this shape.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum number of database nodes available for this shape.",
        SerializedName = @"minimumNodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MinimumNodeCount { get;  }
        /// <summary>
        /// The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.",
        SerializedName = @"runtimeMinimumCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? RuntimeMinimumCoreCount { get;  }
        /// <summary>The family of the shape used for the DB system.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The family of the shape used for the DB system.",
        SerializedName = @"shapeFamily",
        PossibleTypes = new [] { typeof(string) })]
        string ShapeFamily { get;  }

    }
    /// DbSystemShape resource definition
    internal partial interface IDbSystemShapeInternal :
        Sample.API.Models.IProxyResourceInternal
    {
        /// <summary>
        /// The maximum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        int? AvailableCoreCount { get; set; }
        /// <summary>
        /// The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata
        /// shape and ExaCC Elastic shapes.
        /// </summary>
        int? AvailableCoreCountPerNode { get; set; }
        /// <summary>The maximum DATA storage that can be enabled for this shape.</summary>
        int? AvailableDataStorageInTbs { get; set; }
        /// <summary>
        /// The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        double? AvailableDataStoragePerServerInTbs { get; set; }
        /// <summary>
        /// The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        int? AvailableDbNodePerNodeInGbs { get; set; }
        /// <summary>The maximum Db Node storage that can be enabled for this shape.</summary>
        int? AvailableDbNodeStorageInGbs { get; set; }
        /// <summary>The maximum memory that can be enabled for this shape.</summary>
        int? AvailableMemoryInGbs { get; set; }
        /// <summary>
        /// The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
        /// </summary>
        int? AvailableMemoryPerNodeInGbs { get; set; }
        /// <summary>
        /// The discrete number by which the CPU core count for this shape can be increased or decreased.
        /// </summary>
        int? CoreCountIncrement { get; set; }
        /// <summary>
        /// The maximum number of Exadata storage servers available for the Exadata infrastructure.
        /// </summary>
        int? MaxStorageCount { get; set; }
        /// <summary>The maximum number of database nodes available for this shape.</summary>
        int? MaximumNodeCount { get; set; }
        /// <summary>The minimum number of CPU cores that can be enabled per node for this shape.</summary>
        int? MinCoreCountPerNode { get; set; }
        /// <summary>The minimum data storage that need be allocated for this shape.</summary>
        int? MinDataStorageInTbs { get; set; }
        /// <summary>The minimum Db Node storage that need be allocated per node for this shape.</summary>
        int? MinDbNodeStoragePerNodeInGbs { get; set; }
        /// <summary>The minimum memory that need be allocated per node for this shape.</summary>
        int? MinMemoryPerNodeInGbs { get; set; }
        /// <summary>
        /// The minimum number of Exadata storage servers available for the Exadata infrastructure.
        /// </summary>
        int? MinStorageCount { get; set; }
        /// <summary>
        /// The minimum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        int? MinimumCoreCount { get; set; }
        /// <summary>The minimum number of database nodes available for this shape.</summary>
        int? MinimumNodeCount { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Sample.API.Models.IDbSystemShapeProperties Properties { get; set; }
        /// <summary>
        /// The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.
        /// </summary>
        int? RuntimeMinimumCoreCount { get; set; }
        /// <summary>The family of the shape used for the DB system.</summary>
        string ShapeFamily { get; set; }

    }
}