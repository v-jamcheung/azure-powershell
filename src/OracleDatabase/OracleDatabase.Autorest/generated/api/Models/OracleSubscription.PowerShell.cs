// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using Sample.API.Runtime.PowerShell;

    /// <summary>OracleSubscription resource definition</summary>
    [System.ComponentModel.TypeConverter(typeof(OracleSubscriptionTypeConverter))]
    public partial class OracleSubscription
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Sample.API.Models.OracleSubscription"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="Sample.API.Models.IOracleSubscription" />.</returns>
        public static Sample.API.Models.IOracleSubscription DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new OracleSubscription(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Sample.API.Models.OracleSubscription"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="Sample.API.Models.IOracleSubscription" />.</returns>
        public static Sample.API.Models.IOracleSubscription DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new OracleSubscription(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="OracleSubscription" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="OracleSubscription" /> model class.</returns>
        public static Sample.API.Models.IOracleSubscription FromJsonString(string jsonText) => FromJson(Sample.API.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Sample.API.Models.OracleSubscription"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal OracleSubscription(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Properties"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).Properties = (Sample.API.Models.IOracleSubscriptionProperties) content.GetValueForProperty("Properties",((Sample.API.Models.IOracleSubscriptionInternal)this).Properties, Sample.API.Models.OracleSubscriptionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Plan"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).Plan = (Sample.API.Models.IPlan) content.GetValueForProperty("Plan",((Sample.API.Models.IOracleSubscriptionInternal)this).Plan, Sample.API.Models.PlanTypeConverter.ConvertFrom);
            }
            if (content.Contains("RetryAfter"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).RetryAfter = (int?) content.GetValueForProperty("RetryAfter",((Sample.API.Models.IOracleSubscriptionInternal)this).RetryAfter, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Sample.API.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Sample.API.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Sample.API.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemData = (Sample.API.Models.ISystemData) content.GetValueForProperty("SystemData",((Sample.API.Models.IResourceInternal)this).SystemData, Sample.API.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Sample.API.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Sample.API.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Sample.API.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Sample.API.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Sample.API.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Sample.API.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Intent"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).Intent = (string) content.GetValueForProperty("Intent",((Sample.API.Models.IOracleSubscriptionInternal)this).Intent, global::System.Convert.ToString);
            }
            if (content.Contains("PlanName"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanName = (string) content.GetValueForProperty("PlanName",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanName, global::System.Convert.ToString);
            }
            if (content.Contains("PlanPublisher"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanPublisher = (string) content.GetValueForProperty("PlanPublisher",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanPublisher, global::System.Convert.ToString);
            }
            if (content.Contains("PlanProduct"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanProduct = (string) content.GetValueForProperty("PlanProduct",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanProduct, global::System.Convert.ToString);
            }
            if (content.Contains("PlanPromotionCode"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanPromotionCode = (string) content.GetValueForProperty("PlanPromotionCode",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanPromotionCode, global::System.Convert.ToString);
            }
            if (content.Contains("PlanVersion"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanVersion = (string) content.GetValueForProperty("PlanVersion",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Sample.API.Models.IOracleSubscriptionInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("SaasSubscriptionId"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).SaasSubscriptionId = (string) content.GetValueForProperty("SaasSubscriptionId",((Sample.API.Models.IOracleSubscriptionInternal)this).SaasSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("CloudAccountId"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).CloudAccountId = (string) content.GetValueForProperty("CloudAccountId",((Sample.API.Models.IOracleSubscriptionInternal)this).CloudAccountId, global::System.Convert.ToString);
            }
            if (content.Contains("CloudAccountState"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).CloudAccountState = (string) content.GetValueForProperty("CloudAccountState",((Sample.API.Models.IOracleSubscriptionInternal)this).CloudAccountState, global::System.Convert.ToString);
            }
            if (content.Contains("TermUnit"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).TermUnit = (string) content.GetValueForProperty("TermUnit",((Sample.API.Models.IOracleSubscriptionInternal)this).TermUnit, global::System.Convert.ToString);
            }
            if (content.Contains("ProductCode"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).ProductCode = (string) content.GetValueForProperty("ProductCode",((Sample.API.Models.IOracleSubscriptionInternal)this).ProductCode, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Sample.API.Models.OracleSubscription"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal OracleSubscription(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Properties"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).Properties = (Sample.API.Models.IOracleSubscriptionProperties) content.GetValueForProperty("Properties",((Sample.API.Models.IOracleSubscriptionInternal)this).Properties, Sample.API.Models.OracleSubscriptionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Plan"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).Plan = (Sample.API.Models.IPlan) content.GetValueForProperty("Plan",((Sample.API.Models.IOracleSubscriptionInternal)this).Plan, Sample.API.Models.PlanTypeConverter.ConvertFrom);
            }
            if (content.Contains("RetryAfter"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).RetryAfter = (int?) content.GetValueForProperty("RetryAfter",((Sample.API.Models.IOracleSubscriptionInternal)this).RetryAfter, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Sample.API.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Sample.API.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Sample.API.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Sample.API.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Sample.API.Models.IResourceInternal)this).SystemData = (Sample.API.Models.ISystemData) content.GetValueForProperty("SystemData",((Sample.API.Models.IResourceInternal)this).SystemData, Sample.API.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Sample.API.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Sample.API.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Sample.API.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Sample.API.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Sample.API.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Sample.API.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Intent"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).Intent = (string) content.GetValueForProperty("Intent",((Sample.API.Models.IOracleSubscriptionInternal)this).Intent, global::System.Convert.ToString);
            }
            if (content.Contains("PlanName"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanName = (string) content.GetValueForProperty("PlanName",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanName, global::System.Convert.ToString);
            }
            if (content.Contains("PlanPublisher"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanPublisher = (string) content.GetValueForProperty("PlanPublisher",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanPublisher, global::System.Convert.ToString);
            }
            if (content.Contains("PlanProduct"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanProduct = (string) content.GetValueForProperty("PlanProduct",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanProduct, global::System.Convert.ToString);
            }
            if (content.Contains("PlanPromotionCode"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanPromotionCode = (string) content.GetValueForProperty("PlanPromotionCode",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanPromotionCode, global::System.Convert.ToString);
            }
            if (content.Contains("PlanVersion"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).PlanVersion = (string) content.GetValueForProperty("PlanVersion",((Sample.API.Models.IOracleSubscriptionInternal)this).PlanVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Sample.API.Models.IOracleSubscriptionInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("SaasSubscriptionId"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).SaasSubscriptionId = (string) content.GetValueForProperty("SaasSubscriptionId",((Sample.API.Models.IOracleSubscriptionInternal)this).SaasSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("CloudAccountId"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).CloudAccountId = (string) content.GetValueForProperty("CloudAccountId",((Sample.API.Models.IOracleSubscriptionInternal)this).CloudAccountId, global::System.Convert.ToString);
            }
            if (content.Contains("CloudAccountState"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).CloudAccountState = (string) content.GetValueForProperty("CloudAccountState",((Sample.API.Models.IOracleSubscriptionInternal)this).CloudAccountState, global::System.Convert.ToString);
            }
            if (content.Contains("TermUnit"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).TermUnit = (string) content.GetValueForProperty("TermUnit",((Sample.API.Models.IOracleSubscriptionInternal)this).TermUnit, global::System.Convert.ToString);
            }
            if (content.Contains("ProductCode"))
            {
                ((Sample.API.Models.IOracleSubscriptionInternal)this).ProductCode = (string) content.GetValueForProperty("ProductCode",((Sample.API.Models.IOracleSubscriptionInternal)this).ProductCode, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Sample.API.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// OracleSubscription resource definition
    [System.ComponentModel.TypeConverter(typeof(OracleSubscriptionTypeConverter))]
    public partial interface IOracleSubscription

    {

    }
}