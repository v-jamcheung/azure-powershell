// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>CloudExadataInfrastructure resource model</summary>
    public partial class CloudExadataInfrastructureProperties :
        Sample.API.Models.ICloudExadataInfrastructureProperties,
        Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ActivatedStorageCount" /> property.</summary>
        private int? _activatedStorageCount;

        /// <summary>
        /// The requested number of additional storage servers activated for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? ActivatedStorageCount { get => this._activatedStorageCount; }

        /// <summary>Backing field for <see cref="AdditionalStorageCount" /> property.</summary>
        private int? _additionalStorageCount;

        /// <summary>
        /// The requested number of additional storage servers for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? AdditionalStorageCount { get => this._additionalStorageCount; }

        /// <summary>Backing field for <see cref="AvailableStorageSizeInGbs" /> property.</summary>
        private int? _availableStorageSizeInGbs;

        /// <summary>
        /// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? AvailableStorageSizeInGbs { get => this._availableStorageSizeInGbs; }

        /// <summary>Backing field for <see cref="ComputeCount" /> property.</summary>
        private int? _computeCount;

        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? ComputeCount { get => this._computeCount; set => this._computeCount = value; }

        /// <summary>Backing field for <see cref="CpuCount" /> property.</summary>
        private int? _cpuCount;

        /// <summary>The total number of CPU cores allocated.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? CpuCount { get => this._cpuCount; }

        /// <summary>Backing field for <see cref="CustomerContacts" /> property.</summary>
        private System.Collections.Generic.List<Sample.API.Models.ICustomerContact> _customerContacts;

        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get => this._customerContacts; set => this._customerContacts = value; }

        /// <summary>Backing field for <see cref="DataStorageSizeInTbs" /> property.</summary>
        private double? _dataStorageSizeInTbs;

        /// <summary>The quantity of data in the database, in terabytes.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public double? DataStorageSizeInTbs { get => this._dataStorageSizeInTbs; }

        /// <summary>Backing field for <see cref="DbNodeStorageSizeInGbs" /> property.</summary>
        private int? _dbNodeStorageSizeInGbs;

        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? DbNodeStorageSizeInGbs { get => this._dbNodeStorageSizeInGbs; }

        /// <summary>Backing field for <see cref="DbServerVersion" /> property.</summary>
        private string _dbServerVersion;

        /// <summary>
        /// The software version of the database servers (dom0) in the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string DbServerVersion { get => this._dbServerVersion; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The name for the Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="EstimatedPatchingTime" /> property.</summary>
        private Sample.API.Models.IEstimatedPatchingTime _estimatedPatchingTime;

        /// <summary>
        /// The estimated total time required in minutes for all patching operations (database server, storage server, and network
        /// switch patching).
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IEstimatedPatchingTime EstimatedPatchingTime { get => (this._estimatedPatchingTime = this._estimatedPatchingTime ?? new Sample.API.Models.EstimatedPatchingTime()); }

        /// <summary>The estimated time required in minutes for database server patching.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? EstimatedPatchingTimeEstimatedDbServerPatchingTime { get => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedDbServerPatchingTime; }

        /// <summary>The estimated time required in minutes for network switch patching.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime { get => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedNetworkSwitchesPatchingTime; }

        /// <summary>The estimated time required in minutes for storage server patching.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? EstimatedPatchingTimeEstimatedStorageServerPatchingTime { get => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedStorageServerPatchingTime; }

        /// <summary>The estimated total time required in minutes for all patching operations.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? EstimatedPatchingTimeTotalEstimatedPatchingTime { get => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).TotalEstimatedPatchingTime; }

        /// <summary>Backing field for <see cref="LastMaintenanceRunId" /> property.</summary>
        private string _lastMaintenanceRunId;

        /// <summary>The OCID of the last maintenance run.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string LastMaintenanceRunId { get => this._lastMaintenanceRunId; }

        /// <summary>Backing field for <see cref="LifecycleDetails" /> property.</summary>
        private string _lifecycleDetails;

        /// <summary>Additional information about the current lifecycle state.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string LifecycleDetails { get => this._lifecycleDetails; }

        /// <summary>Backing field for <see cref="LifecycleState" /> property.</summary>
        private string _lifecycleState;

        /// <summary>CloudExadataInfrastructure lifecycle state</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string LifecycleState { get => this._lifecycleState; }

        /// <summary>Backing field for <see cref="MaintenanceWindow" /> property.</summary>
        private Sample.API.Models.IMaintenanceWindow _maintenanceWindow;

        /// <summary>maintenanceWindow property</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IMaintenanceWindow MaintenanceWindow { get => (this._maintenanceWindow = this._maintenanceWindow ?? new Sample.API.Models.MaintenanceWindow()); set => this._maintenanceWindow = value; }

        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowCustomActionTimeoutInMins { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).CustomActionTimeoutInMins; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).CustomActionTimeoutInMins = value ?? default(int); }

        /// <summary>Days during the week when maintenance should be performed.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).DaysOfWeek; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).DaysOfWeek = value ?? null /* arrayOf */; }

        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).HoursOfDay; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).HoursOfDay = value ?? null /* arrayOf */; }

        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).IsCustomActionTimeoutEnabled; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).IsCustomActionTimeoutEnabled = value ?? default(bool); }

        /// <summary>is Monthly Patching Enabled</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public bool? MaintenanceWindowIsMonthlyPatchingEnabled { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).IsMonthlyPatchingEnabled; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).IsMonthlyPatchingEnabled = value ?? default(bool); }

        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowLeadTimeInWeeks { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).LeadTimeInWeeks; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).LeadTimeInWeeks = value ?? default(int); }

        /// <summary>Months during the year when maintenance should be performed.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).Months; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).Months = value ?? null /* arrayOf */; }

        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string MaintenanceWindowPatchingMode { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).PatchingMode; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).PatchingMode = value ?? null; }

        /// <summary>The maintenance window scheduling preference.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string MaintenanceWindowPreference { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).Preference; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).Preference = value ?? null; }

        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).WeeksOfMonth; set => ((Sample.API.Models.IMaintenanceWindowInternal)MaintenanceWindow).WeeksOfMonth = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="MaxCpuCount" /> property.</summary>
        private int? _maxCpuCount;

        /// <summary>The total number of CPU cores available.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? MaxCpuCount { get => this._maxCpuCount; }

        /// <summary>Backing field for <see cref="MaxDataStorageInTbs" /> property.</summary>
        private double? _maxDataStorageInTbs;

        /// <summary>The total available DATA disk group size.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public double? MaxDataStorageInTbs { get => this._maxDataStorageInTbs; }

        /// <summary>Backing field for <see cref="MaxDbNodeStorageSizeInGbs" /> property.</summary>
        private int? _maxDbNodeStorageSizeInGbs;

        /// <summary>The total local node storage available in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? MaxDbNodeStorageSizeInGbs { get => this._maxDbNodeStorageSizeInGbs; }

        /// <summary>Backing field for <see cref="MaxMemoryInGbs" /> property.</summary>
        private int? _maxMemoryInGbs;

        /// <summary>The total memory available in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? MaxMemoryInGbs { get => this._maxMemoryInGbs; }

        /// <summary>Backing field for <see cref="MemorySizeInGbs" /> property.</summary>
        private int? _memorySizeInGbs;

        /// <summary>The memory allocated in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? MemorySizeInGbs { get => this._memorySizeInGbs; }

        /// <summary>Backing field for <see cref="MonthlyDbServerVersion" /> property.</summary>
        private string _monthlyDbServerVersion;

        /// <summary>Monthly Db Server version</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string MonthlyDbServerVersion { get => this._monthlyDbServerVersion; }

        /// <summary>Backing field for <see cref="MonthlyStorageServerVersion" /> property.</summary>
        private string _monthlyStorageServerVersion;

        /// <summary>Monthly Storage Server version</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string MonthlyStorageServerVersion { get => this._monthlyStorageServerVersion; }

        /// <summary>Backing field for <see cref="NextMaintenanceRunId" /> property.</summary>
        private string _nextMaintenanceRunId;

        /// <summary>The OCID of the next maintenance run.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string NextMaintenanceRunId { get => this._nextMaintenanceRunId; }

        /// <summary>Backing field for <see cref="OciUrl" /> property.</summary>
        private string _ociUrl;

        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string OciUrl { get => this._ociUrl; }

        /// <summary>Backing field for <see cref="Ocid" /> property.</summary>
        private string _ocid;

        /// <summary>Exadata infra ocid</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Ocid { get => this._ocid; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>CloudExadataInfrastructure provisioning state</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Internal Acessors for ActivatedStorageCount</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.ActivatedStorageCount { get => this._activatedStorageCount; set { {_activatedStorageCount = value;} } }

        /// <summary>Internal Acessors for AdditionalStorageCount</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.AdditionalStorageCount { get => this._additionalStorageCount; set { {_additionalStorageCount = value;} } }

        /// <summary>Internal Acessors for AvailableStorageSizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.AvailableStorageSizeInGbs { get => this._availableStorageSizeInGbs; set { {_availableStorageSizeInGbs = value;} } }

        /// <summary>Internal Acessors for CpuCount</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.CpuCount { get => this._cpuCount; set { {_cpuCount = value;} } }

        /// <summary>Internal Acessors for DataStorageSizeInTbs</summary>
        double? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.DataStorageSizeInTbs { get => this._dataStorageSizeInTbs; set { {_dataStorageSizeInTbs = value;} } }

        /// <summary>Internal Acessors for DbNodeStorageSizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.DbNodeStorageSizeInGbs { get => this._dbNodeStorageSizeInGbs; set { {_dbNodeStorageSizeInGbs = value;} } }

        /// <summary>Internal Acessors for DbServerVersion</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.DbServerVersion { get => this._dbServerVersion; set { {_dbServerVersion = value;} } }

        /// <summary>Internal Acessors for EstimatedPatchingTime</summary>
        Sample.API.Models.IEstimatedPatchingTime Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.EstimatedPatchingTime { get => (this._estimatedPatchingTime = this._estimatedPatchingTime ?? new Sample.API.Models.EstimatedPatchingTime()); set { {_estimatedPatchingTime = value;} } }

        /// <summary>Internal Acessors for EstimatedPatchingTimeEstimatedDbServerPatchingTime</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.EstimatedPatchingTimeEstimatedDbServerPatchingTime { get => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedDbServerPatchingTime; set => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedDbServerPatchingTime = value; }

        /// <summary>Internal Acessors for EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime { get => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedNetworkSwitchesPatchingTime; set => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedNetworkSwitchesPatchingTime = value; }

        /// <summary>Internal Acessors for EstimatedPatchingTimeEstimatedStorageServerPatchingTime</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.EstimatedPatchingTimeEstimatedStorageServerPatchingTime { get => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedStorageServerPatchingTime; set => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).EstimatedStorageServerPatchingTime = value; }

        /// <summary>Internal Acessors for EstimatedPatchingTimeTotalEstimatedPatchingTime</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.EstimatedPatchingTimeTotalEstimatedPatchingTime { get => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).TotalEstimatedPatchingTime; set => ((Sample.API.Models.IEstimatedPatchingTimeInternal)EstimatedPatchingTime).TotalEstimatedPatchingTime = value; }

        /// <summary>Internal Acessors for LastMaintenanceRunId</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.LastMaintenanceRunId { get => this._lastMaintenanceRunId; set { {_lastMaintenanceRunId = value;} } }

        /// <summary>Internal Acessors for LifecycleDetails</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.LifecycleDetails { get => this._lifecycleDetails; set { {_lifecycleDetails = value;} } }

        /// <summary>Internal Acessors for LifecycleState</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.LifecycleState { get => this._lifecycleState; set { {_lifecycleState = value;} } }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Sample.API.Models.IMaintenanceWindow Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.MaintenanceWindow { get => (this._maintenanceWindow = this._maintenanceWindow ?? new Sample.API.Models.MaintenanceWindow()); set { {_maintenanceWindow = value;} } }

        /// <summary>Internal Acessors for MaxCpuCount</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.MaxCpuCount { get => this._maxCpuCount; set { {_maxCpuCount = value;} } }

        /// <summary>Internal Acessors for MaxDataStorageInTbs</summary>
        double? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.MaxDataStorageInTbs { get => this._maxDataStorageInTbs; set { {_maxDataStorageInTbs = value;} } }

        /// <summary>Internal Acessors for MaxDbNodeStorageSizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.MaxDbNodeStorageSizeInGbs { get => this._maxDbNodeStorageSizeInGbs; set { {_maxDbNodeStorageSizeInGbs = value;} } }

        /// <summary>Internal Acessors for MaxMemoryInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.MaxMemoryInGbs { get => this._maxMemoryInGbs; set { {_maxMemoryInGbs = value;} } }

        /// <summary>Internal Acessors for MemorySizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.MemorySizeInGbs { get => this._memorySizeInGbs; set { {_memorySizeInGbs = value;} } }

        /// <summary>Internal Acessors for MonthlyDbServerVersion</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.MonthlyDbServerVersion { get => this._monthlyDbServerVersion; set { {_monthlyDbServerVersion = value;} } }

        /// <summary>Internal Acessors for MonthlyStorageServerVersion</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.MonthlyStorageServerVersion { get => this._monthlyStorageServerVersion; set { {_monthlyStorageServerVersion = value;} } }

        /// <summary>Internal Acessors for NextMaintenanceRunId</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.NextMaintenanceRunId { get => this._nextMaintenanceRunId; set { {_nextMaintenanceRunId = value;} } }

        /// <summary>Internal Acessors for OciUrl</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.OciUrl { get => this._ociUrl; set { {_ociUrl = value;} } }

        /// <summary>Internal Acessors for Ocid</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.Ocid { get => this._ocid; set { {_ocid = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for StorageServerVersion</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.StorageServerVersion { get => this._storageServerVersion; set { {_storageServerVersion = value;} } }

        /// <summary>Internal Acessors for TimeCreated</summary>
        string Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.TimeCreated { get => this._timeCreated; set { {_timeCreated = value;} } }

        /// <summary>Internal Acessors for TotalStorageSizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal.TotalStorageSizeInGbs { get => this._totalStorageSizeInGbs; set { {_totalStorageSizeInGbs = value;} } }

        /// <summary>Backing field for <see cref="Shape" /> property.</summary>
        private string _shape;

        /// <summary>The model name of the cloud Exadata infrastructure resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Shape { get => this._shape; set => this._shape = value; }

        /// <summary>Backing field for <see cref="StorageCount" /> property.</summary>
        private int? _storageCount;

        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? StorageCount { get => this._storageCount; set => this._storageCount = value; }

        /// <summary>Backing field for <see cref="StorageServerVersion" /> property.</summary>
        private string _storageServerVersion;

        /// <summary>
        /// The software version of the storage servers (cells) in the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string StorageServerVersion { get => this._storageServerVersion; }

        /// <summary>Backing field for <see cref="TimeCreated" /> property.</summary>
        private string _timeCreated;

        /// <summary>The date and time the cloud Exadata infrastructure resource was created.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string TimeCreated { get => this._timeCreated; }

        /// <summary>Backing field for <see cref="TotalStorageSizeInGbs" /> property.</summary>
        private int? _totalStorageSizeInGbs;

        /// <summary>
        /// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? TotalStorageSizeInGbs { get => this._totalStorageSizeInGbs; }

        /// <summary>Creates an new <see cref="CloudExadataInfrastructureProperties" /> instance.</summary>
        public CloudExadataInfrastructureProperties()
        {

        }
    }
    /// CloudExadataInfrastructure resource model
    public partial interface ICloudExadataInfrastructureProperties :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The requested number of additional storage servers activated for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The requested number of additional storage servers activated for the Exadata infrastructure.",
        SerializedName = @"activatedStorageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ActivatedStorageCount { get;  }
        /// <summary>
        /// The requested number of additional storage servers for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The requested number of additional storage servers for the Exadata infrastructure.",
        SerializedName = @"additionalStorageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalStorageCount { get;  }
        /// <summary>
        /// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
        SerializedName = @"availableStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableStorageSizeInGbs { get;  }
        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of compute servers for the cloud Exadata infrastructure.",
        SerializedName = @"computeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ComputeCount { get; set; }
        /// <summary>The total number of CPU cores allocated.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of CPU cores allocated.",
        SerializedName = @"cpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCount { get;  }
        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. ",
        SerializedName = @"customerContacts",
        PossibleTypes = new [] { typeof(Sample.API.Models.ICustomerContact) })]
        System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get; set; }
        /// <summary>The quantity of data in the database, in terabytes.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The quantity of data in the database, in terabytes.",
        SerializedName = @"dataStorageSizeInTbs",
        PossibleTypes = new [] { typeof(double) })]
        double? DataStorageSizeInTbs { get;  }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The local node storage to be allocated in GBs.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGbs { get;  }
        /// <summary>
        /// The software version of the database servers (dom0) in the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The software version of the database servers (dom0) in the Exadata infrastructure.",
        SerializedName = @"dbServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DbServerVersion { get;  }
        /// <summary>The name for the Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name for the Exadata infrastructure.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The estimated time required in minutes for database server patching.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The estimated time required in minutes for database server patching.",
        SerializedName = @"estimatedDbServerPatchingTime",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchingTimeEstimatedDbServerPatchingTime { get;  }
        /// <summary>The estimated time required in minutes for network switch patching.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The estimated time required in minutes for network switch patching.",
        SerializedName = @"estimatedNetworkSwitchesPatchingTime",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime { get;  }
        /// <summary>The estimated time required in minutes for storage server patching.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The estimated time required in minutes for storage server patching.",
        SerializedName = @"estimatedStorageServerPatchingTime",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchingTimeEstimatedStorageServerPatchingTime { get;  }
        /// <summary>The estimated total time required in minutes for all patching operations.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The estimated total time required in minutes for all patching operations.",
        SerializedName = @"totalEstimatedPatchingTime",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchingTimeTotalEstimatedPatchingTime { get;  }
        /// <summary>The OCID of the last maintenance run.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the last maintenance run.",
        SerializedName = @"lastMaintenanceRunId",
        PossibleTypes = new [] { typeof(string) })]
        string LastMaintenanceRunId { get;  }
        /// <summary>Additional information about the current lifecycle state.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Additional information about the current lifecycle state.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetails { get;  }
        /// <summary>CloudExadataInfrastructure lifecycle state</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"CloudExadataInfrastructure lifecycle state",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Provisioning", "Available", "Updating", "Terminating", "Terminated", "MaintenanceInProgress", "Failed")]
        string LifecycleState { get;  }
        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).",
        SerializedName = @"customActionTimeoutInMins",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowCustomActionTimeoutInMins { get; set; }
        /// <summary>Days during the week when maintenance should be performed.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Days during the week when maintenance should be performed.",
        SerializedName = @"daysOfWeek",
        PossibleTypes = new [] { typeof(Sample.API.Models.IDayOfWeek) })]
        System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get; set; }
        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC",
        SerializedName = @"hoursOfDay",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get; set; }
        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.",
        SerializedName = @"isCustomActionTimeoutEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get; set; }
        /// <summary>is Monthly Patching Enabled</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"is Monthly Patching Enabled",
        SerializedName = @"isMonthlyPatchingEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaintenanceWindowIsMonthlyPatchingEnabled { get; set; }
        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. ",
        SerializedName = @"leadTimeInWeeks",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowLeadTimeInWeeks { get; set; }
        /// <summary>Months during the year when maintenance should be performed.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Months during the year when maintenance should be performed.",
        SerializedName = @"months",
        PossibleTypes = new [] { typeof(Sample.API.Models.IMonth) })]
        System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get; set; }
        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Cloud Exadata infrastructure node patching method.",
        SerializedName = @"patchingMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Rolling", "NonRolling")]
        string MaintenanceWindowPatchingMode { get; set; }
        /// <summary>The maintenance window scheduling preference.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maintenance window scheduling preference.",
        SerializedName = @"preference",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("NoPreference", "CustomPreference")]
        string MaintenanceWindowPreference { get; set; }
        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. ",
        SerializedName = @"weeksOfMonth",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get; set; }
        /// <summary>The total number of CPU cores available.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of CPU cores available.",
        SerializedName = @"maxCpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCpuCount { get;  }
        /// <summary>The total available DATA disk group size.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total available DATA disk group size.",
        SerializedName = @"maxDataStorageInTbs",
        PossibleTypes = new [] { typeof(double) })]
        double? MaxDataStorageInTbs { get;  }
        /// <summary>The total local node storage available in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total local node storage available in GBs.",
        SerializedName = @"maxDbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDbNodeStorageSizeInGbs { get;  }
        /// <summary>The total memory available in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total memory available in GBs.",
        SerializedName = @"maxMemoryInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxMemoryInGbs { get;  }
        /// <summary>The memory allocated in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The memory allocated in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGbs { get;  }
        /// <summary>Monthly Db Server version</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Monthly Db Server version",
        SerializedName = @"monthlyDbServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MonthlyDbServerVersion { get;  }
        /// <summary>Monthly Storage Server version</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Monthly Storage Server version",
        SerializedName = @"monthlyStorageServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MonthlyStorageServerVersion { get;  }
        /// <summary>The OCID of the next maintenance run.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the next maintenance run.",
        SerializedName = @"nextMaintenanceRunId",
        PossibleTypes = new [] { typeof(string) })]
        string NextMaintenanceRunId { get;  }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
        SerializedName = @"ociUrl",
        PossibleTypes = new [] { typeof(string) })]
        string OciUrl { get;  }
        /// <summary>Exadata infra ocid</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Exadata infra ocid",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>CloudExadataInfrastructure provisioning state</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"CloudExadataInfrastructure provisioning state",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning")]
        string ProvisioningState { get;  }
        /// <summary>The model name of the cloud Exadata infrastructure resource.</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The model name of the cloud Exadata infrastructure resource.",
        SerializedName = @"shape",
        PossibleTypes = new [] { typeof(string) })]
        string Shape { get; set; }
        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of storage servers for the cloud Exadata infrastructure.",
        SerializedName = @"storageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageCount { get; set; }
        /// <summary>
        /// The software version of the storage servers (cells) in the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The software version of the storage servers (cells) in the Exadata infrastructure.",
        SerializedName = @"storageServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string StorageServerVersion { get;  }
        /// <summary>The date and time the cloud Exadata infrastructure resource was created.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The date and time the cloud Exadata infrastructure resource was created.",
        SerializedName = @"timeCreated",
        PossibleTypes = new [] { typeof(string) })]
        string TimeCreated { get;  }
        /// <summary>
        /// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
        SerializedName = @"totalStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalStorageSizeInGbs { get;  }

    }
    /// CloudExadataInfrastructure resource model
    internal partial interface ICloudExadataInfrastructurePropertiesInternal

    {
        /// <summary>
        /// The requested number of additional storage servers activated for the Exadata infrastructure.
        /// </summary>
        int? ActivatedStorageCount { get; set; }
        /// <summary>
        /// The requested number of additional storage servers for the Exadata infrastructure.
        /// </summary>
        int? AdditionalStorageCount { get; set; }
        /// <summary>
        /// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        int? AvailableStorageSizeInGbs { get; set; }
        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        int? ComputeCount { get; set; }
        /// <summary>The total number of CPU cores allocated.</summary>
        int? CpuCount { get; set; }
        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get; set; }
        /// <summary>The quantity of data in the database, in terabytes.</summary>
        double? DataStorageSizeInTbs { get; set; }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        int? DbNodeStorageSizeInGbs { get; set; }
        /// <summary>
        /// The software version of the database servers (dom0) in the Exadata infrastructure.
        /// </summary>
        string DbServerVersion { get; set; }
        /// <summary>The name for the Exadata infrastructure.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The estimated total time required in minutes for all patching operations (database server, storage server, and network
        /// switch patching).
        /// </summary>
        Sample.API.Models.IEstimatedPatchingTime EstimatedPatchingTime { get; set; }
        /// <summary>The estimated time required in minutes for database server patching.</summary>
        int? EstimatedPatchingTimeEstimatedDbServerPatchingTime { get; set; }
        /// <summary>The estimated time required in minutes for network switch patching.</summary>
        int? EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime { get; set; }
        /// <summary>The estimated time required in minutes for storage server patching.</summary>
        int? EstimatedPatchingTimeEstimatedStorageServerPatchingTime { get; set; }
        /// <summary>The estimated total time required in minutes for all patching operations.</summary>
        int? EstimatedPatchingTimeTotalEstimatedPatchingTime { get; set; }
        /// <summary>The OCID of the last maintenance run.</summary>
        string LastMaintenanceRunId { get; set; }
        /// <summary>Additional information about the current lifecycle state.</summary>
        string LifecycleDetails { get; set; }
        /// <summary>CloudExadataInfrastructure lifecycle state</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Provisioning", "Available", "Updating", "Terminating", "Terminated", "MaintenanceInProgress", "Failed")]
        string LifecycleState { get; set; }
        /// <summary>maintenanceWindow property</summary>
        Sample.API.Models.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        int? MaintenanceWindowCustomActionTimeoutInMins { get; set; }
        /// <summary>Days during the week when maintenance should be performed.</summary>
        System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get; set; }
        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get; set; }
        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get; set; }
        /// <summary>is Monthly Patching Enabled</summary>
        bool? MaintenanceWindowIsMonthlyPatchingEnabled { get; set; }
        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        int? MaintenanceWindowLeadTimeInWeeks { get; set; }
        /// <summary>Months during the year when maintenance should be performed.</summary>
        System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get; set; }
        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Rolling", "NonRolling")]
        string MaintenanceWindowPatchingMode { get; set; }
        /// <summary>The maintenance window scheduling preference.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("NoPreference", "CustomPreference")]
        string MaintenanceWindowPreference { get; set; }
        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get; set; }
        /// <summary>The total number of CPU cores available.</summary>
        int? MaxCpuCount { get; set; }
        /// <summary>The total available DATA disk group size.</summary>
        double? MaxDataStorageInTbs { get; set; }
        /// <summary>The total local node storage available in GBs.</summary>
        int? MaxDbNodeStorageSizeInGbs { get; set; }
        /// <summary>The total memory available in GBs.</summary>
        int? MaxMemoryInGbs { get; set; }
        /// <summary>The memory allocated in GBs.</summary>
        int? MemorySizeInGbs { get; set; }
        /// <summary>Monthly Db Server version</summary>
        string MonthlyDbServerVersion { get; set; }
        /// <summary>Monthly Storage Server version</summary>
        string MonthlyStorageServerVersion { get; set; }
        /// <summary>The OCID of the next maintenance run.</summary>
        string NextMaintenanceRunId { get; set; }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        string OciUrl { get; set; }
        /// <summary>Exadata infra ocid</summary>
        string Ocid { get; set; }
        /// <summary>CloudExadataInfrastructure provisioning state</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning")]
        string ProvisioningState { get; set; }
        /// <summary>The model name of the cloud Exadata infrastructure resource.</summary>
        string Shape { get; set; }
        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        int? StorageCount { get; set; }
        /// <summary>
        /// The software version of the storage servers (cells) in the Exadata infrastructure.
        /// </summary>
        string StorageServerVersion { get; set; }
        /// <summary>The date and time the cloud Exadata infrastructure resource was created.</summary>
        string TimeCreated { get; set; }
        /// <summary>
        /// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        int? TotalStorageSizeInGbs { get; set; }

    }
}