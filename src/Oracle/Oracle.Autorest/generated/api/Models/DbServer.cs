// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>DbServer resource model</summary>
    public partial class DbServer :
        Sample.API.Models.IDbServer,
        Sample.API.Models.IDbServerInternal,
        Sample.API.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Sample.API.Models.IProxyResource" />
        /// </summary>
        private Sample.API.Models.IProxyResource __proxyResource = new Sample.API.Models.ProxyResource();

        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> AutonomousVMClusterIds { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).AutonomousVMClusterIds; }

        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> AutonomousVirtualMachineIds { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).AutonomousVirtualMachineIds; }

        /// <summary>The OCID of the compartment.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string CompartmentId { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).CompartmentId; }

        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? CpuCoreCount { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).CpuCoreCount; }

        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DbNodeIds { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbNodeIds; }

        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? DbNodeStorageSizeInGbs { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbNodeStorageSizeInGbs; }

        /// <summary>Estimated Patch Duration</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? DbServerPatchingDetailEstimatedPatchDuration { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailEstimatedPatchDuration; }

        /// <summary>Patching Status</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DbServerPatchingDetailPatchingStatus { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailPatchingStatus; }

        /// <summary>Time Patching Ended</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailTimePatchingEnded; }

        /// <summary>Time Patching Started</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailTimePatchingStarted; }

        /// <summary>The name for the Db Server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DisplayName; }

        /// <summary>The OCID of the Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string ExadataInfrastructureId { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).ExadataInfrastructureId; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Id { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>Lifecycle details of dbServer.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string LifecycleDetails { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).LifecycleDetails; }

        /// <summary>DbServer provisioning state.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string LifecycleState { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).LifecycleState; }

        /// <summary>The total number of CPU cores available.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaxCpuCount { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxCpuCount; }

        /// <summary>The total max dbNode storage in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaxDbNodeStorageInGbs { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxDbNodeStorageInGbs; }

        /// <summary>The total memory available in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaxMemoryInGbs { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxMemoryInGbs; }

        /// <summary>The total memory size in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MemorySizeInGbs { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MemorySizeInGbs; }

        /// <summary>The name of the resource</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Name { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>Db server name.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string Ocid { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).Ocid; }

        /// <summary>Backing field for <see cref="Properties" /> property.</summary>
        private Sample.API.Models.IDbServerProperties _properties;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.IDbServerProperties Properties { get => (this._properties = this._properties ?? new Sample.API.Models.DbServerProperties()); set => this._properties = value; }

        /// <summary>Azure resource provisioning state.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).ProvisioningState; }

        /// <summary>Internal Acessors for AutonomousVMClusterIds</summary>
        System.Collections.Generic.List<string> Sample.API.Models.IDbServerInternal.AutonomousVMClusterIds { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).AutonomousVMClusterIds; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).AutonomousVMClusterIds = value; }

        /// <summary>Internal Acessors for AutonomousVirtualMachineIds</summary>
        System.Collections.Generic.List<string> Sample.API.Models.IDbServerInternal.AutonomousVirtualMachineIds { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).AutonomousVirtualMachineIds; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).AutonomousVirtualMachineIds = value; }

        /// <summary>Internal Acessors for CompartmentId</summary>
        string Sample.API.Models.IDbServerInternal.CompartmentId { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).CompartmentId; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).CompartmentId = value; }

        /// <summary>Internal Acessors for CpuCoreCount</summary>
        int? Sample.API.Models.IDbServerInternal.CpuCoreCount { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).CpuCoreCount; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).CpuCoreCount = value; }

        /// <summary>Internal Acessors for DbNodeIds</summary>
        System.Collections.Generic.List<string> Sample.API.Models.IDbServerInternal.DbNodeIds { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbNodeIds; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbNodeIds = value; }

        /// <summary>Internal Acessors for DbNodeStorageSizeInGbs</summary>
        int? Sample.API.Models.IDbServerInternal.DbNodeStorageSizeInGbs { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbNodeStorageSizeInGbs; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbNodeStorageSizeInGbs = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailEstimatedPatchDuration</summary>
        int? Sample.API.Models.IDbServerInternal.DbServerPatchingDetailEstimatedPatchDuration { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailEstimatedPatchDuration; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailEstimatedPatchDuration = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailPatchingStatus</summary>
        string Sample.API.Models.IDbServerInternal.DbServerPatchingDetailPatchingStatus { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailPatchingStatus; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailPatchingStatus = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailTimePatchingEnded</summary>
        global::System.DateTime? Sample.API.Models.IDbServerInternal.DbServerPatchingDetailTimePatchingEnded { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailTimePatchingEnded; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailTimePatchingEnded = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailTimePatchingStarted</summary>
        global::System.DateTime? Sample.API.Models.IDbServerInternal.DbServerPatchingDetailTimePatchingStarted { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailTimePatchingStarted; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetailTimePatchingStarted = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetails</summary>
        Sample.API.Models.IDbServerPatchingDetails Sample.API.Models.IDbServerInternal.DbServerPatchingDetails { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetails; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DbServerPatchingDetails = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Sample.API.Models.IDbServerInternal.DisplayName { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DisplayName; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).DisplayName = value; }

        /// <summary>Internal Acessors for ExadataInfrastructureId</summary>
        string Sample.API.Models.IDbServerInternal.ExadataInfrastructureId { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).ExadataInfrastructureId; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).ExadataInfrastructureId = value; }

        /// <summary>Internal Acessors for LifecycleDetails</summary>
        string Sample.API.Models.IDbServerInternal.LifecycleDetails { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).LifecycleDetails; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).LifecycleDetails = value; }

        /// <summary>Internal Acessors for LifecycleState</summary>
        string Sample.API.Models.IDbServerInternal.LifecycleState { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).LifecycleState; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).LifecycleState = value; }

        /// <summary>Internal Acessors for MaxCpuCount</summary>
        int? Sample.API.Models.IDbServerInternal.MaxCpuCount { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxCpuCount; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxCpuCount = value; }

        /// <summary>Internal Acessors for MaxDbNodeStorageInGbs</summary>
        int? Sample.API.Models.IDbServerInternal.MaxDbNodeStorageInGbs { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxDbNodeStorageInGbs; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxDbNodeStorageInGbs = value; }

        /// <summary>Internal Acessors for MaxMemoryInGbs</summary>
        int? Sample.API.Models.IDbServerInternal.MaxMemoryInGbs { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxMemoryInGbs; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MaxMemoryInGbs = value; }

        /// <summary>Internal Acessors for MemorySizeInGbs</summary>
        int? Sample.API.Models.IDbServerInternal.MemorySizeInGbs { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MemorySizeInGbs; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).MemorySizeInGbs = value; }

        /// <summary>Internal Acessors for Ocid</summary>
        string Sample.API.Models.IDbServerInternal.Ocid { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).Ocid; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).Ocid = value; }

        /// <summary>Internal Acessors for Properties</summary>
        Sample.API.Models.IDbServerProperties Sample.API.Models.IDbServerInternal.Properties { get => (this._properties = this._properties ?? new Sample.API.Models.DbServerProperties()); set { {_properties = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Sample.API.Models.IDbServerInternal.ProvisioningState { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).ProvisioningState; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).ProvisioningState = value; }

        /// <summary>Internal Acessors for Shape</summary>
        string Sample.API.Models.IDbServerInternal.Shape { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).Shape; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).Shape = value; }

        /// <summary>Internal Acessors for TimeCreated</summary>
        global::System.DateTime? Sample.API.Models.IDbServerInternal.TimeCreated { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).TimeCreated; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).TimeCreated = value; }

        /// <summary>Internal Acessors for VMClusterIds</summary>
        System.Collections.Generic.List<string> Sample.API.Models.IDbServerInternal.VMClusterIds { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).VMClusterIds; set => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).VMClusterIds = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Sample.API.Models.IResourceInternal.Id { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Id; set => ((Sample.API.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Sample.API.Models.IResourceInternal.Name { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Name; set => ((Sample.API.Models.IResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Sample.API.Models.ISystemData Sample.API.Models.IResourceInternal.SystemData { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemData; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Sample.API.Models.IResourceInternal.Type { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Type; set => ((Sample.API.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string Shape { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).Shape; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        internal Sample.API.Models.ISystemData SystemData { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Sample.API.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>The date and time that the Db Server was created.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimeCreated { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).TimeCreated; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Type { get => ((Sample.API.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> VMClusterIds { get => ((Sample.API.Models.IDbServerPropertiesInternal)Properties).VMClusterIds; }

        /// <summary>Creates an new <see cref="DbServer" /> instance.</summary>
        public DbServer()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Sample.API.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Sample.API.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// DbServer resource model
    public partial interface IDbServer :
        Sample.API.Runtime.IJsonSerializable,
        Sample.API.Models.IProxyResource
    {
        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The list of OCIDs of the Autonomous VM Clusters associated with the Db server.",
        SerializedName = @"autonomousVmClusterIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AutonomousVMClusterIds { get;  }
        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.",
        SerializedName = @"autonomousVirtualMachineIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AutonomousVirtualMachineIds { get;  }
        /// <summary>The OCID of the compartment.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the compartment.",
        SerializedName = @"compartmentId",
        PossibleTypes = new [] { typeof(string) })]
        string CompartmentId { get;  }
        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of CPU cores enabled on the Db server.",
        SerializedName = @"cpuCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCoreCount { get;  }
        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the Db nodes associated with the Db server.",
        SerializedName = @"dbNodeIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DbNodeIds { get;  }
        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The allocated local node storage in GBs on the Db server.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGbs { get;  }
        /// <summary>Estimated Patch Duration</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Estimated Patch Duration",
        SerializedName = @"estimatedPatchDuration",
        PossibleTypes = new [] { typeof(int) })]
        int? DbServerPatchingDetailEstimatedPatchDuration { get;  }
        /// <summary>Patching Status</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Patching Status",
        SerializedName = @"patchingStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Scheduled", "MaintenanceInProgress", "Failed", "Complete")]
        string DbServerPatchingDetailPatchingStatus { get;  }
        /// <summary>Time Patching Ended</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Time Patching Ended",
        SerializedName = @"timePatchingEnded",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get;  }
        /// <summary>Time Patching Started</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Time Patching Started",
        SerializedName = @"timePatchingStarted",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get;  }
        /// <summary>The name for the Db Server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name for the Db Server.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>The OCID of the Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the Exadata infrastructure.",
        SerializedName = @"exadataInfrastructureId",
        PossibleTypes = new [] { typeof(string) })]
        string ExadataInfrastructureId { get;  }
        /// <summary>Lifecycle details of dbServer.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Lifecycle details of dbServer.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetails { get;  }
        /// <summary>DbServer provisioning state.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"DbServer provisioning state.",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Creating", "Available", "Unavailable", "Deleting", "Deleted", "MaintenanceInProgress")]
        string LifecycleState { get;  }
        /// <summary>The total number of CPU cores available.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of CPU cores available.",
        SerializedName = @"maxCpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCpuCount { get;  }
        /// <summary>The total max dbNode storage in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total max dbNode storage in GBs.",
        SerializedName = @"maxDbNodeStorageInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDbNodeStorageInGbs { get;  }
        /// <summary>The total memory available in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total memory available in GBs.",
        SerializedName = @"maxMemoryInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxMemoryInGbs { get;  }
        /// <summary>The total memory size in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total memory size in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGbs { get;  }
        /// <summary>Db server name.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Db server name.",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>Azure resource provisioning state.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Azure resource provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string ProvisioningState { get;  }
        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.",
        SerializedName = @"shape",
        PossibleTypes = new [] { typeof(string) })]
        string Shape { get;  }
        /// <summary>The date and time that the Db Server was created.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The date and time that the Db Server was created.",
        SerializedName = @"timeCreated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeCreated { get;  }
        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the VM Clusters associated with the Db server.",
        SerializedName = @"vmClusterIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> VMClusterIds { get;  }

    }
    /// DbServer resource model
    internal partial interface IDbServerInternal :
        Sample.API.Models.IProxyResourceInternal
    {
        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        System.Collections.Generic.List<string> AutonomousVMClusterIds { get; set; }
        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        System.Collections.Generic.List<string> AutonomousVirtualMachineIds { get; set; }
        /// <summary>The OCID of the compartment.</summary>
        string CompartmentId { get; set; }
        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        int? CpuCoreCount { get; set; }
        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        System.Collections.Generic.List<string> DbNodeIds { get; set; }
        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        int? DbNodeStorageSizeInGbs { get; set; }
        /// <summary>Estimated Patch Duration</summary>
        int? DbServerPatchingDetailEstimatedPatchDuration { get; set; }
        /// <summary>Patching Status</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Scheduled", "MaintenanceInProgress", "Failed", "Complete")]
        string DbServerPatchingDetailPatchingStatus { get; set; }
        /// <summary>Time Patching Ended</summary>
        global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get; set; }
        /// <summary>Time Patching Started</summary>
        global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get; set; }
        /// <summary>dbServerPatching details of the Db server.</summary>
        Sample.API.Models.IDbServerPatchingDetails DbServerPatchingDetails { get; set; }
        /// <summary>The name for the Db Server.</summary>
        string DisplayName { get; set; }
        /// <summary>The OCID of the Exadata infrastructure.</summary>
        string ExadataInfrastructureId { get; set; }
        /// <summary>Lifecycle details of dbServer.</summary>
        string LifecycleDetails { get; set; }
        /// <summary>DbServer provisioning state.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Creating", "Available", "Unavailable", "Deleting", "Deleted", "MaintenanceInProgress")]
        string LifecycleState { get; set; }
        /// <summary>The total number of CPU cores available.</summary>
        int? MaxCpuCount { get; set; }
        /// <summary>The total max dbNode storage in GBs.</summary>
        int? MaxDbNodeStorageInGbs { get; set; }
        /// <summary>The total memory available in GBs.</summary>
        int? MaxMemoryInGbs { get; set; }
        /// <summary>The total memory size in GBs.</summary>
        int? MemorySizeInGbs { get; set; }
        /// <summary>Db server name.</summary>
        string Ocid { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Sample.API.Models.IDbServerProperties Properties { get; set; }
        /// <summary>Azure resource provisioning state.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string ProvisioningState { get; set; }
        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        string Shape { get; set; }
        /// <summary>The date and time that the Db Server was created.</summary>
        global::System.DateTime? TimeCreated { get; set; }
        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        System.Collections.Generic.List<string> VMClusterIds { get; set; }

    }
}