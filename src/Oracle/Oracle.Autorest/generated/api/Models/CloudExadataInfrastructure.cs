// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>CloudExadataInfrastructure resource definition</summary>
    public partial class CloudExadataInfrastructure :
        Sample.API.Models.ICloudExadataInfrastructure,
        Sample.API.Models.ICloudExadataInfrastructureInternal,
        Sample.API.Runtime.IValidates,
        Sample.API.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Sample.API.Models.ITrackedResource" />
        /// </summary>
        private Sample.API.Models.ITrackedResource __trackedResource = new Sample.API.Models.TrackedResource();

        /// <summary>
        /// The requested number of additional storage servers activated for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? ActivatedStorageCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).ActivatedStorageCount; }

        /// <summary>
        /// The requested number of additional storage servers for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AdditionalStorageCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).AdditionalStorageCount; }

        /// <summary>
        /// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? AvailableStorageSizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).AvailableStorageSizeInGbs; }

        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? ComputeCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).ComputeCount; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).ComputeCount = value ?? default(int); }

        /// <summary>The total number of CPU cores allocated.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? CpuCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).CpuCount; }

        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).CustomerContacts; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).CustomerContacts = value ?? null /* arrayOf */; }

        /// <summary>The quantity of data in the database, in terabytes.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public double? DataStorageSizeInTbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DataStorageSizeInTbs; }

        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? DbNodeStorageSizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DbNodeStorageSizeInGbs; }

        /// <summary>
        /// The software version of the database servers (dom0) in the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DbServerVersion { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DbServerVersion; }

        /// <summary>The name for the Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DisplayName; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DisplayName = value ?? null; }

        /// <summary>The estimated time required in minutes for database server patching.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? EstimatedPatchingTimeEstimatedDbServerPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedDbServerPatchingTime; }

        /// <summary>The estimated time required in minutes for network switch patching.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime; }

        /// <summary>The estimated time required in minutes for storage server patching.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? EstimatedPatchingTimeEstimatedStorageServerPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedStorageServerPatchingTime; }

        /// <summary>The estimated total time required in minutes for all patching operations.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? EstimatedPatchingTimeTotalEstimatedPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeTotalEstimatedPatchingTime; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Id { get => ((Sample.API.Models.IResourceInternal)__trackedResource).Id; }

        /// <summary>The OCID of the last maintenance run.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string LastMaintenanceRunId { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LastMaintenanceRunId; }

        /// <summary>Additional information about the current lifecycle state.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string LifecycleDetails { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LifecycleDetails; }

        /// <summary>CloudExadataInfrastructure lifecycle state</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string LifecycleState { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LifecycleState; }

        /// <summary>The geo-location where the resource lives</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Location { get => ((Sample.API.Models.ITrackedResourceInternal)__trackedResource).Location; set => ((Sample.API.Models.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowCustomActionTimeoutInMins { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowCustomActionTimeoutInMins; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowCustomActionTimeoutInMins = value ?? default(int); }

        /// <summary>Days during the week when maintenance should be performed.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowDaysOfWeek; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowDaysOfWeek = value ?? null /* arrayOf */; }

        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowHoursOfDay; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowHoursOfDay = value ?? null /* arrayOf */; }

        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowIsCustomActionTimeoutEnabled; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowIsCustomActionTimeoutEnabled = value ?? default(bool); }

        /// <summary>is Monthly Patching Enabled</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public bool? MaintenanceWindowIsMonthlyPatchingEnabled { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowIsMonthlyPatchingEnabled; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowIsMonthlyPatchingEnabled = value ?? default(bool); }

        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowLeadTimeInWeeks { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowLeadTimeInWeeks; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowLeadTimeInWeeks = value ?? default(int); }

        /// <summary>Months during the year when maintenance should be performed.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowMonths; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowMonths = value ?? null /* arrayOf */; }

        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string MaintenanceWindowPatchingMode { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowPatchingMode; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowPatchingMode = value ?? null; }

        /// <summary>The maintenance window scheduling preference.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string MaintenanceWindowPreference { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowPreference; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowPreference = value ?? null; }

        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowWeeksOfMonth; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindowWeeksOfMonth = value ?? null /* arrayOf */; }

        /// <summary>The total number of CPU cores available.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaxCpuCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxCpuCount; }

        /// <summary>The total available DATA disk group size.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public double? MaxDataStorageInTbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxDataStorageInTbs; }

        /// <summary>The total local node storage available in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaxDbNodeStorageSizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxDbNodeStorageSizeInGbs; }

        /// <summary>The total memory available in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaxMemoryInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxMemoryInGbs; }

        /// <summary>The memory allocated in GBs.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MemorySizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MemorySizeInGbs; }

        /// <summary>Monthly Db Server version</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string MonthlyDbServerVersion { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MonthlyDbServerVersion; }

        /// <summary>Monthly Storage Server version</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string MonthlyStorageServerVersion { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MonthlyStorageServerVersion; }

        /// <summary>The name of the resource</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Name { get => ((Sample.API.Models.IResourceInternal)__trackedResource).Name; }

        /// <summary>The OCID of the next maintenance run.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string NextMaintenanceRunId { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).NextMaintenanceRunId; }

        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string OciUrl { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).OciUrl; }

        /// <summary>Exadata infra ocid</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string Ocid { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).Ocid; }

        /// <summary>Backing field for <see cref="Properties" /> property.</summary>
        private Sample.API.Models.ICloudExadataInfrastructureProperties _properties;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.ICloudExadataInfrastructureProperties Properties { get => (this._properties = this._properties ?? new Sample.API.Models.CloudExadataInfrastructureProperties()); set => this._properties = value; }

        /// <summary>CloudExadataInfrastructure provisioning state</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).ProvisioningState; }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>Internal Acessors for ActivatedStorageCount</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.ActivatedStorageCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).ActivatedStorageCount; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).ActivatedStorageCount = value; }

        /// <summary>Internal Acessors for AdditionalStorageCount</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.AdditionalStorageCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).AdditionalStorageCount; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).AdditionalStorageCount = value; }

        /// <summary>Internal Acessors for AvailableStorageSizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.AvailableStorageSizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).AvailableStorageSizeInGbs; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).AvailableStorageSizeInGbs = value; }

        /// <summary>Internal Acessors for CpuCount</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.CpuCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).CpuCount; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).CpuCount = value; }

        /// <summary>Internal Acessors for DataStorageSizeInTbs</summary>
        double? Sample.API.Models.ICloudExadataInfrastructureInternal.DataStorageSizeInTbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DataStorageSizeInTbs; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DataStorageSizeInTbs = value; }

        /// <summary>Internal Acessors for DbNodeStorageSizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.DbNodeStorageSizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DbNodeStorageSizeInGbs; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DbNodeStorageSizeInGbs = value; }

        /// <summary>Internal Acessors for DbServerVersion</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.DbServerVersion { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DbServerVersion; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).DbServerVersion = value; }

        /// <summary>Internal Acessors for EstimatedPatchingTime</summary>
        Sample.API.Models.IEstimatedPatchingTime Sample.API.Models.ICloudExadataInfrastructureInternal.EstimatedPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTime; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTime = value; }

        /// <summary>Internal Acessors for EstimatedPatchingTimeEstimatedDbServerPatchingTime</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.EstimatedPatchingTimeEstimatedDbServerPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedDbServerPatchingTime; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedDbServerPatchingTime = value; }

        /// <summary>Internal Acessors for EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime = value; }

        /// <summary>Internal Acessors for EstimatedPatchingTimeEstimatedStorageServerPatchingTime</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.EstimatedPatchingTimeEstimatedStorageServerPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedStorageServerPatchingTime; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeEstimatedStorageServerPatchingTime = value; }

        /// <summary>Internal Acessors for EstimatedPatchingTimeTotalEstimatedPatchingTime</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.EstimatedPatchingTimeTotalEstimatedPatchingTime { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeTotalEstimatedPatchingTime; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).EstimatedPatchingTimeTotalEstimatedPatchingTime = value; }

        /// <summary>Internal Acessors for LastMaintenanceRunId</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.LastMaintenanceRunId { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LastMaintenanceRunId; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LastMaintenanceRunId = value; }

        /// <summary>Internal Acessors for LifecycleDetails</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.LifecycleDetails { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LifecycleDetails; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LifecycleDetails = value; }

        /// <summary>Internal Acessors for LifecycleState</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.LifecycleState { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LifecycleState; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).LifecycleState = value; }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Sample.API.Models.IMaintenanceWindow Sample.API.Models.ICloudExadataInfrastructureInternal.MaintenanceWindow { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindow; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaintenanceWindow = value; }

        /// <summary>Internal Acessors for MaxCpuCount</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.MaxCpuCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxCpuCount; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxCpuCount = value; }

        /// <summary>Internal Acessors for MaxDataStorageInTbs</summary>
        double? Sample.API.Models.ICloudExadataInfrastructureInternal.MaxDataStorageInTbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxDataStorageInTbs; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxDataStorageInTbs = value; }

        /// <summary>Internal Acessors for MaxDbNodeStorageSizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.MaxDbNodeStorageSizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxDbNodeStorageSizeInGbs; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxDbNodeStorageSizeInGbs = value; }

        /// <summary>Internal Acessors for MaxMemoryInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.MaxMemoryInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxMemoryInGbs; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MaxMemoryInGbs = value; }

        /// <summary>Internal Acessors for MemorySizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.MemorySizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MemorySizeInGbs; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MemorySizeInGbs = value; }

        /// <summary>Internal Acessors for MonthlyDbServerVersion</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.MonthlyDbServerVersion { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MonthlyDbServerVersion; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MonthlyDbServerVersion = value; }

        /// <summary>Internal Acessors for MonthlyStorageServerVersion</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.MonthlyStorageServerVersion { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MonthlyStorageServerVersion; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).MonthlyStorageServerVersion = value; }

        /// <summary>Internal Acessors for NextMaintenanceRunId</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.NextMaintenanceRunId { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).NextMaintenanceRunId; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).NextMaintenanceRunId = value; }

        /// <summary>Internal Acessors for OciUrl</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.OciUrl { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).OciUrl; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).OciUrl = value; }

        /// <summary>Internal Acessors for Ocid</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.Ocid { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).Ocid; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).Ocid = value; }

        /// <summary>Internal Acessors for Properties</summary>
        Sample.API.Models.ICloudExadataInfrastructureProperties Sample.API.Models.ICloudExadataInfrastructureInternal.Properties { get => (this._properties = this._properties ?? new Sample.API.Models.CloudExadataInfrastructureProperties()); set { {_properties = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.ProvisioningState { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).ProvisioningState; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).ProvisioningState = value; }

        /// <summary>Internal Acessors for StorageServerVersion</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.StorageServerVersion { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).StorageServerVersion; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).StorageServerVersion = value; }

        /// <summary>Internal Acessors for TimeCreated</summary>
        string Sample.API.Models.ICloudExadataInfrastructureInternal.TimeCreated { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).TimeCreated; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).TimeCreated = value; }

        /// <summary>Internal Acessors for TotalStorageSizeInGbs</summary>
        int? Sample.API.Models.ICloudExadataInfrastructureInternal.TotalStorageSizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).TotalStorageSizeInGbs; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).TotalStorageSizeInGbs = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Sample.API.Models.IResourceInternal.Id { get => ((Sample.API.Models.IResourceInternal)__trackedResource).Id; set => ((Sample.API.Models.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Sample.API.Models.IResourceInternal.Name { get => ((Sample.API.Models.IResourceInternal)__trackedResource).Name; set => ((Sample.API.Models.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Sample.API.Models.ISystemData Sample.API.Models.IResourceInternal.SystemData { get => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemData; set => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Sample.API.Models.IResourceInternal.Type { get => ((Sample.API.Models.IResourceInternal)__trackedResource).Type; set => ((Sample.API.Models.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The model name of the cloud Exadata infrastructure resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string Shape { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).Shape; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).Shape = value ?? null; }

        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? StorageCount { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).StorageCount; set => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).StorageCount = value ?? default(int); }

        /// <summary>
        /// The software version of the storage servers (cells) in the Exadata infrastructure.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string StorageServerVersion { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).StorageServerVersion; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        internal Sample.API.Models.ISystemData SystemData { get => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Sample.API.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>Resource tags.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public Sample.API.Models.ITrackedResourceTags Tags { get => ((Sample.API.Models.ITrackedResourceInternal)__trackedResource).Tags; set => ((Sample.API.Models.ITrackedResourceInternal)__trackedResource).Tags = value ?? null /* model class */; }

        /// <summary>The date and time the cloud Exadata infrastructure resource was created.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string TimeCreated { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).TimeCreated; }

        /// <summary>
        /// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? TotalStorageSizeInGbs { get => ((Sample.API.Models.ICloudExadataInfrastructurePropertiesInternal)Properties).TotalStorageSizeInGbs; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inherited)]
        public string Type { get => ((Sample.API.Models.IResourceInternal)__trackedResource).Type; }

        /// <summary>Backing field for <see cref="Zones" /> property.</summary>
        private System.Collections.Generic.List<string> _zones;

        /// <summary>CloudExadataInfrastructure zones</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Zones { get => this._zones; set => this._zones = value; }

        /// <summary>Creates an new <see cref="CloudExadataInfrastructure" /> instance.</summary>
        public CloudExadataInfrastructure()
        {

        }

        /// <param name="headers"></param>
        void Sample.API.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader0))
            {
                ((Sample.API.Models.ICloudExadataInfrastructureInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader0) is string __headerRetryAfterHeader0 ? int.TryParse( __headerRetryAfterHeader0, out int __headerRetryAfterHeader0Value ) ? __headerRetryAfterHeader0Value : default(int?) : default(int?);
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Sample.API.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Sample.API.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// CloudExadataInfrastructure resource definition
    public partial interface ICloudExadataInfrastructure :
        Sample.API.Runtime.IJsonSerializable,
        Sample.API.Models.ITrackedResource
    {
        /// <summary>
        /// The requested number of additional storage servers activated for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The requested number of additional storage servers activated for the Exadata infrastructure.",
        SerializedName = @"activatedStorageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ActivatedStorageCount { get;  }
        /// <summary>
        /// The requested number of additional storage servers for the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The requested number of additional storage servers for the Exadata infrastructure.",
        SerializedName = @"additionalStorageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalStorageCount { get;  }
        /// <summary>
        /// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
        SerializedName = @"availableStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailableStorageSizeInGbs { get;  }
        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of compute servers for the cloud Exadata infrastructure.",
        SerializedName = @"computeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ComputeCount { get; set; }
        /// <summary>The total number of CPU cores allocated.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of CPU cores allocated.",
        SerializedName = @"cpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCount { get;  }
        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. ",
        SerializedName = @"customerContacts",
        PossibleTypes = new [] { typeof(Sample.API.Models.ICustomerContact) })]
        System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get; set; }
        /// <summary>The quantity of data in the database, in terabytes.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The quantity of data in the database, in terabytes.",
        SerializedName = @"dataStorageSizeInTbs",
        PossibleTypes = new [] { typeof(double) })]
        double? DataStorageSizeInTbs { get;  }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The local node storage to be allocated in GBs.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGbs { get;  }
        /// <summary>
        /// The software version of the database servers (dom0) in the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The software version of the database servers (dom0) in the Exadata infrastructure.",
        SerializedName = @"dbServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DbServerVersion { get;  }
        /// <summary>The name for the Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name for the Exadata infrastructure.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The estimated time required in minutes for database server patching.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The estimated time required in minutes for database server patching.",
        SerializedName = @"estimatedDbServerPatchingTime",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchingTimeEstimatedDbServerPatchingTime { get;  }
        /// <summary>The estimated time required in minutes for network switch patching.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The estimated time required in minutes for network switch patching.",
        SerializedName = @"estimatedNetworkSwitchesPatchingTime",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime { get;  }
        /// <summary>The estimated time required in minutes for storage server patching.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The estimated time required in minutes for storage server patching.",
        SerializedName = @"estimatedStorageServerPatchingTime",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchingTimeEstimatedStorageServerPatchingTime { get;  }
        /// <summary>The estimated total time required in minutes for all patching operations.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The estimated total time required in minutes for all patching operations.",
        SerializedName = @"totalEstimatedPatchingTime",
        PossibleTypes = new [] { typeof(int) })]
        int? EstimatedPatchingTimeTotalEstimatedPatchingTime { get;  }
        /// <summary>The OCID of the last maintenance run.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the last maintenance run.",
        SerializedName = @"lastMaintenanceRunId",
        PossibleTypes = new [] { typeof(string) })]
        string LastMaintenanceRunId { get;  }
        /// <summary>Additional information about the current lifecycle state.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Additional information about the current lifecycle state.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetails { get;  }
        /// <summary>CloudExadataInfrastructure lifecycle state</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"CloudExadataInfrastructure lifecycle state",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Provisioning", "Available", "Updating", "Terminating", "Terminated", "MaintenanceInProgress", "Failed")]
        string LifecycleState { get;  }
        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).",
        SerializedName = @"customActionTimeoutInMins",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowCustomActionTimeoutInMins { get; set; }
        /// <summary>Days during the week when maintenance should be performed.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Days during the week when maintenance should be performed.",
        SerializedName = @"daysOfWeek",
        PossibleTypes = new [] { typeof(Sample.API.Models.IDayOfWeek) })]
        System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get; set; }
        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC",
        SerializedName = @"hoursOfDay",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get; set; }
        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.",
        SerializedName = @"isCustomActionTimeoutEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get; set; }
        /// <summary>is Monthly Patching Enabled</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"is Monthly Patching Enabled",
        SerializedName = @"isMonthlyPatchingEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaintenanceWindowIsMonthlyPatchingEnabled { get; set; }
        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. ",
        SerializedName = @"leadTimeInWeeks",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowLeadTimeInWeeks { get; set; }
        /// <summary>Months during the year when maintenance should be performed.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Months during the year when maintenance should be performed.",
        SerializedName = @"months",
        PossibleTypes = new [] { typeof(Sample.API.Models.IMonth) })]
        System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get; set; }
        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Cloud Exadata infrastructure node patching method.",
        SerializedName = @"patchingMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Rolling", "NonRolling")]
        string MaintenanceWindowPatchingMode { get; set; }
        /// <summary>The maintenance window scheduling preference.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maintenance window scheduling preference.",
        SerializedName = @"preference",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("NoPreference", "CustomPreference")]
        string MaintenanceWindowPreference { get; set; }
        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. ",
        SerializedName = @"weeksOfMonth",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get; set; }
        /// <summary>The total number of CPU cores available.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of CPU cores available.",
        SerializedName = @"maxCpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCpuCount { get;  }
        /// <summary>The total available DATA disk group size.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total available DATA disk group size.",
        SerializedName = @"maxDataStorageInTbs",
        PossibleTypes = new [] { typeof(double) })]
        double? MaxDataStorageInTbs { get;  }
        /// <summary>The total local node storage available in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total local node storage available in GBs.",
        SerializedName = @"maxDbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDbNodeStorageSizeInGbs { get;  }
        /// <summary>The total memory available in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total memory available in GBs.",
        SerializedName = @"maxMemoryInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxMemoryInGbs { get;  }
        /// <summary>The memory allocated in GBs.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The memory allocated in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGbs { get;  }
        /// <summary>Monthly Db Server version</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Monthly Db Server version",
        SerializedName = @"monthlyDbServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MonthlyDbServerVersion { get;  }
        /// <summary>Monthly Storage Server version</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Monthly Storage Server version",
        SerializedName = @"monthlyStorageServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MonthlyStorageServerVersion { get;  }
        /// <summary>The OCID of the next maintenance run.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the next maintenance run.",
        SerializedName = @"nextMaintenanceRunId",
        PossibleTypes = new [] { typeof(string) })]
        string NextMaintenanceRunId { get;  }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
        SerializedName = @"ociUrl",
        PossibleTypes = new [] { typeof(string) })]
        string OciUrl { get;  }
        /// <summary>Exadata infra ocid</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Exadata infra ocid",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>CloudExadataInfrastructure provisioning state</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"CloudExadataInfrastructure provisioning state",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning")]
        string ProvisioningState { get;  }

        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }
        /// <summary>The model name of the cloud Exadata infrastructure resource.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The model name of the cloud Exadata infrastructure resource.",
        SerializedName = @"shape",
        PossibleTypes = new [] { typeof(string) })]
        string Shape { get; set; }
        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of storage servers for the cloud Exadata infrastructure.",
        SerializedName = @"storageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageCount { get; set; }
        /// <summary>
        /// The software version of the storage servers (cells) in the Exadata infrastructure.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The software version of the storage servers (cells) in the Exadata infrastructure.",
        SerializedName = @"storageServerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string StorageServerVersion { get;  }
        /// <summary>The date and time the cloud Exadata infrastructure resource was created.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The date and time the cloud Exadata infrastructure resource was created.",
        SerializedName = @"timeCreated",
        PossibleTypes = new [] { typeof(string) })]
        string TimeCreated { get;  }
        /// <summary>
        /// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
        SerializedName = @"totalStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalStorageSizeInGbs { get;  }
        /// <summary>CloudExadataInfrastructure zones</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"CloudExadataInfrastructure zones",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Zones { get; set; }

    }
    /// CloudExadataInfrastructure resource definition
    internal partial interface ICloudExadataInfrastructureInternal :
        Sample.API.Models.ITrackedResourceInternal
    {
        /// <summary>
        /// The requested number of additional storage servers activated for the Exadata infrastructure.
        /// </summary>
        int? ActivatedStorageCount { get; set; }
        /// <summary>
        /// The requested number of additional storage servers for the Exadata infrastructure.
        /// </summary>
        int? AdditionalStorageCount { get; set; }
        /// <summary>
        /// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        int? AvailableStorageSizeInGbs { get; set; }
        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        int? ComputeCount { get; set; }
        /// <summary>The total number of CPU cores allocated.</summary>
        int? CpuCount { get; set; }
        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get; set; }
        /// <summary>The quantity of data in the database, in terabytes.</summary>
        double? DataStorageSizeInTbs { get; set; }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        int? DbNodeStorageSizeInGbs { get; set; }
        /// <summary>
        /// The software version of the database servers (dom0) in the Exadata infrastructure.
        /// </summary>
        string DbServerVersion { get; set; }
        /// <summary>The name for the Exadata infrastructure.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The estimated total time required in minutes for all patching operations (database server, storage server, and network
        /// switch patching).
        /// </summary>
        Sample.API.Models.IEstimatedPatchingTime EstimatedPatchingTime { get; set; }
        /// <summary>The estimated time required in minutes for database server patching.</summary>
        int? EstimatedPatchingTimeEstimatedDbServerPatchingTime { get; set; }
        /// <summary>The estimated time required in minutes for network switch patching.</summary>
        int? EstimatedPatchingTimeEstimatedNetworkSwitchesPatchingTime { get; set; }
        /// <summary>The estimated time required in minutes for storage server patching.</summary>
        int? EstimatedPatchingTimeEstimatedStorageServerPatchingTime { get; set; }
        /// <summary>The estimated total time required in minutes for all patching operations.</summary>
        int? EstimatedPatchingTimeTotalEstimatedPatchingTime { get; set; }
        /// <summary>The OCID of the last maintenance run.</summary>
        string LastMaintenanceRunId { get; set; }
        /// <summary>Additional information about the current lifecycle state.</summary>
        string LifecycleDetails { get; set; }
        /// <summary>CloudExadataInfrastructure lifecycle state</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Provisioning", "Available", "Updating", "Terminating", "Terminated", "MaintenanceInProgress", "Failed")]
        string LifecycleState { get; set; }
        /// <summary>maintenanceWindow property</summary>
        Sample.API.Models.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        int? MaintenanceWindowCustomActionTimeoutInMins { get; set; }
        /// <summary>Days during the week when maintenance should be performed.</summary>
        System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get; set; }
        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get; set; }
        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get; set; }
        /// <summary>is Monthly Patching Enabled</summary>
        bool? MaintenanceWindowIsMonthlyPatchingEnabled { get; set; }
        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        int? MaintenanceWindowLeadTimeInWeeks { get; set; }
        /// <summary>Months during the year when maintenance should be performed.</summary>
        System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get; set; }
        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Rolling", "NonRolling")]
        string MaintenanceWindowPatchingMode { get; set; }
        /// <summary>The maintenance window scheduling preference.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("NoPreference", "CustomPreference")]
        string MaintenanceWindowPreference { get; set; }
        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get; set; }
        /// <summary>The total number of CPU cores available.</summary>
        int? MaxCpuCount { get; set; }
        /// <summary>The total available DATA disk group size.</summary>
        double? MaxDataStorageInTbs { get; set; }
        /// <summary>The total local node storage available in GBs.</summary>
        int? MaxDbNodeStorageSizeInGbs { get; set; }
        /// <summary>The total memory available in GBs.</summary>
        int? MaxMemoryInGbs { get; set; }
        /// <summary>The memory allocated in GBs.</summary>
        int? MemorySizeInGbs { get; set; }
        /// <summary>Monthly Db Server version</summary>
        string MonthlyDbServerVersion { get; set; }
        /// <summary>Monthly Storage Server version</summary>
        string MonthlyStorageServerVersion { get; set; }
        /// <summary>The OCID of the next maintenance run.</summary>
        string NextMaintenanceRunId { get; set; }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        string OciUrl { get; set; }
        /// <summary>Exadata infra ocid</summary>
        string Ocid { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Sample.API.Models.ICloudExadataInfrastructureProperties Properties { get; set; }
        /// <summary>CloudExadataInfrastructure provisioning state</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning")]
        string ProvisioningState { get; set; }

        int? RetryAfter { get; set; }
        /// <summary>The model name of the cloud Exadata infrastructure resource.</summary>
        string Shape { get; set; }
        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        int? StorageCount { get; set; }
        /// <summary>
        /// The software version of the storage servers (cells) in the Exadata infrastructure.
        /// </summary>
        string StorageServerVersion { get; set; }
        /// <summary>The date and time the cloud Exadata infrastructure resource was created.</summary>
        string TimeCreated { get; set; }
        /// <summary>
        /// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
        /// </summary>
        int? TotalStorageSizeInGbs { get; set; }
        /// <summary>CloudExadataInfrastructure zones</summary>
        System.Collections.Generic.List<string> Zones { get; set; }

    }
}