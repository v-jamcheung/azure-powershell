// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>The type used for update operations of the CloudExadataInfrastructure.</summary>
    public partial class CloudExadataInfrastructureUpdate :
        Sample.API.Models.ICloudExadataInfrastructureUpdate,
        Sample.API.Models.ICloudExadataInfrastructureUpdateInternal
    {

        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? ComputeCount { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).ComputeCount; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).ComputeCount = value ?? default(int); }

        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).CustomerContacts; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).CustomerContacts = value ?? null /* arrayOf */; }

        /// <summary>The name for the Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).DisplayName; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).DisplayName = value ?? null; }

        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowCustomActionTimeoutInMins { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowCustomActionTimeoutInMins; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowCustomActionTimeoutInMins = value ?? default(int); }

        /// <summary>Days during the week when maintenance should be performed.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowDaysOfWeek; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowDaysOfWeek = value ?? null /* arrayOf */; }

        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowHoursOfDay; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowHoursOfDay = value ?? null /* arrayOf */; }

        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowIsCustomActionTimeoutEnabled; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowIsCustomActionTimeoutEnabled = value ?? default(bool); }

        /// <summary>is Monthly Patching Enabled</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public bool? MaintenanceWindowIsMonthlyPatchingEnabled { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowIsMonthlyPatchingEnabled; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowIsMonthlyPatchingEnabled = value ?? default(bool); }

        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowLeadTimeInWeeks { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowLeadTimeInWeeks; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowLeadTimeInWeeks = value ?? default(int); }

        /// <summary>Months during the year when maintenance should be performed.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowMonths; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowMonths = value ?? null /* arrayOf */; }

        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string MaintenanceWindowPatchingMode { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowPatchingMode; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowPatchingMode = value ?? null; }

        /// <summary>The maintenance window scheduling preference.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public string MaintenanceWindowPreference { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowPreference; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowPreference = value ?? null; }

        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowWeeksOfMonth; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindowWeeksOfMonth = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Properties" /> property.</summary>
        private Sample.API.Models.ICloudExadataInfrastructureUpdateProperties _properties;

        /// <summary>The updatable properties of the CloudExadataInfrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        internal Sample.API.Models.ICloudExadataInfrastructureUpdateProperties Properties { get => (this._properties = this._properties ?? new Sample.API.Models.CloudExadataInfrastructureUpdateProperties()); set => this._properties = value; }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Sample.API.Models.IMaintenanceWindow Sample.API.Models.ICloudExadataInfrastructureUpdateInternal.MaintenanceWindow { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindow; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).MaintenanceWindow = value; }

        /// <summary>Internal Acessors for Properties</summary>
        Sample.API.Models.ICloudExadataInfrastructureUpdateProperties Sample.API.Models.ICloudExadataInfrastructureUpdateInternal.Properties { get => (this._properties = this._properties ?? new Sample.API.Models.CloudExadataInfrastructureUpdateProperties()); set { {_properties = value;} } }

        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Inlined)]
        public int? StorageCount { get => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).StorageCount; set => ((Sample.API.Models.ICloudExadataInfrastructureUpdatePropertiesInternal)Properties).StorageCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="Tags" /> property.</summary>
        private Sample.API.Models.ICloudExadataInfrastructureUpdateTags _tags;

        /// <summary>Resource tags.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public Sample.API.Models.ICloudExadataInfrastructureUpdateTags Tags { get => (this._tags = this._tags ?? new Sample.API.Models.CloudExadataInfrastructureUpdateTags()); set => this._tags = value; }

        /// <summary>Backing field for <see cref="Zones" /> property.</summary>
        private System.Collections.Generic.List<string> _zones;

        /// <summary>CloudExadataInfrastructure zones</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Zones { get => this._zones; set => this._zones = value; }

        /// <summary>Creates an new <see cref="CloudExadataInfrastructureUpdate" /> instance.</summary>
        public CloudExadataInfrastructureUpdate()
        {

        }
    }
    /// The type used for update operations of the CloudExadataInfrastructure.
    public partial interface ICloudExadataInfrastructureUpdate :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of compute servers for the cloud Exadata infrastructure.",
        SerializedName = @"computeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ComputeCount { get; set; }
        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. ",
        SerializedName = @"customerContacts",
        PossibleTypes = new [] { typeof(Sample.API.Models.ICustomerContact) })]
        System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get; set; }
        /// <summary>The name for the Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name for the Exadata infrastructure.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).",
        SerializedName = @"customActionTimeoutInMins",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowCustomActionTimeoutInMins { get; set; }
        /// <summary>Days during the week when maintenance should be performed.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Days during the week when maintenance should be performed.",
        SerializedName = @"daysOfWeek",
        PossibleTypes = new [] { typeof(Sample.API.Models.IDayOfWeek) })]
        System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get; set; }
        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC",
        SerializedName = @"hoursOfDay",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get; set; }
        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.",
        SerializedName = @"isCustomActionTimeoutEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get; set; }
        /// <summary>is Monthly Patching Enabled</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"is Monthly Patching Enabled",
        SerializedName = @"isMonthlyPatchingEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MaintenanceWindowIsMonthlyPatchingEnabled { get; set; }
        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. ",
        SerializedName = @"leadTimeInWeeks",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowLeadTimeInWeeks { get; set; }
        /// <summary>Months during the year when maintenance should be performed.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Months during the year when maintenance should be performed.",
        SerializedName = @"months",
        PossibleTypes = new [] { typeof(Sample.API.Models.IMonth) })]
        System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get; set; }
        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Cloud Exadata infrastructure node patching method.",
        SerializedName = @"patchingMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Rolling", "NonRolling")]
        string MaintenanceWindowPatchingMode { get; set; }
        /// <summary>The maintenance window scheduling preference.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maintenance window scheduling preference.",
        SerializedName = @"preference",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("NoPreference", "CustomPreference")]
        string MaintenanceWindowPreference { get; set; }
        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. ",
        SerializedName = @"weeksOfMonth",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get; set; }
        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of storage servers for the cloud Exadata infrastructure.",
        SerializedName = @"storageCount",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageCount { get; set; }
        /// <summary>Resource tags.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Sample.API.Models.ICloudExadataInfrastructureUpdateTags) })]
        Sample.API.Models.ICloudExadataInfrastructureUpdateTags Tags { get; set; }
        /// <summary>CloudExadataInfrastructure zones</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"CloudExadataInfrastructure zones",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Zones { get; set; }

    }
    /// The type used for update operations of the CloudExadataInfrastructure.
    internal partial interface ICloudExadataInfrastructureUpdateInternal

    {
        /// <summary>The number of compute servers for the cloud Exadata infrastructure.</summary>
        int? ComputeCount { get; set; }
        /// <summary>
        /// The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource.
        /// Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information
        /// about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer
        /// contacts for a cloud Exadata infrastructure instance.
        /// </summary>
        System.Collections.Generic.List<Sample.API.Models.ICustomerContact> CustomerContacts { get; set; }
        /// <summary>The name for the Exadata infrastructure.</summary>
        string DisplayName { get; set; }
        /// <summary>maintenanceWindow property</summary>
        Sample.API.Models.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>
        /// Determines the amount of time the system will wait before the start of each database server patching operation. Custom
        /// action timeout is in minutes and valid value is between 15 to 120 (inclusive).
        /// </summary>
        int? MaintenanceWindowCustomActionTimeoutInMins { get; set; }
        /// <summary>Days during the week when maintenance should be performed.</summary>
        System.Collections.Generic.List<Sample.API.Models.IDayOfWeek> MaintenanceWindowDaysOfWeek { get; set; }
        /// <summary>
        /// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are
        /// - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00
        /// - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents
        /// time slot 20:00 - 23:59 UTC
        /// </summary>
        System.Collections.Generic.List<int> MaintenanceWindowHoursOfDay { get; set; }
        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations.
        /// </summary>
        bool? MaintenanceWindowIsCustomActionTimeoutEnabled { get; set; }
        /// <summary>is Monthly Patching Enabled</summary>
        bool? MaintenanceWindowIsMonthlyPatchingEnabled { get; set; }
        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value
        /// is between 1 to 4.
        /// </summary>
        int? MaintenanceWindowLeadTimeInWeeks { get; set; }
        /// <summary>Months during the year when maintenance should be performed.</summary>
        System.Collections.Generic.List<Sample.API.Models.IMonth> MaintenanceWindowMonths { get; set; }
        /// <summary>Cloud Exadata infrastructure node patching method.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Rolling", "NonRolling")]
        string MaintenanceWindowPatchingMode { get; set; }
        /// <summary>The maintenance window scheduling preference.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("NoPreference", "CustomPreference")]
        string MaintenanceWindowPreference { get; set; }
        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month,
        /// and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow
        /// maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance
        /// cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction
        /// with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance
        /// will be performed.
        /// </summary>
        System.Collections.Generic.List<int> MaintenanceWindowWeeksOfMonth { get; set; }
        /// <summary>The updatable properties of the CloudExadataInfrastructure.</summary>
        Sample.API.Models.ICloudExadataInfrastructureUpdateProperties Properties { get; set; }
        /// <summary>The number of storage servers for the cloud Exadata infrastructure.</summary>
        int? StorageCount { get; set; }
        /// <summary>Resource tags.</summary>
        Sample.API.Models.ICloudExadataInfrastructureUpdateTags Tags { get; set; }
        /// <summary>CloudExadataInfrastructure zones</summary>
        System.Collections.Generic.List<string> Zones { get; set; }

    }
}