// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.698)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>Autonomous Database Generate Wallet resource model.</summary>
    public partial class GenerateAutonomousDatabaseWalletDetails :
        Sample.API.Models.IGenerateAutonomousDatabaseWalletDetails,
        Sample.API.Models.IGenerateAutonomousDatabaseWalletDetailsInternal
    {

        /// <summary>Backing field for <see cref="GenerateType" /> property.</summary>
        private string _generateType;

        /// <summary>The type of wallet to generate.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string GenerateType { get => this._generateType; set => this._generateType = value; }

        /// <summary>Backing field for <see cref="IsRegional" /> property.</summary>
        private bool? _isRegional;

        /// <summary>
        /// True when requesting regional connection strings in PDB connect info, applicable to cross-region DG only.
        /// </summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public bool? IsRegional { get => this._isRegional; set => this._isRegional = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private System.Security.SecureString _password;

        /// <summary>The password to encrypt the keys inside the wallet</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public System.Security.SecureString Password { get => this._password; set => this._password = value; }

        /// <summary>Creates an new <see cref="GenerateAutonomousDatabaseWalletDetails" /> instance.</summary>
        public GenerateAutonomousDatabaseWalletDetails()
        {

        }
    }
    /// Autonomous Database Generate Wallet resource model.
    public partial interface IGenerateAutonomousDatabaseWalletDetails :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>The type of wallet to generate.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of wallet to generate.",
        SerializedName = @"generateType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Single", "All")]
        string GenerateType { get; set; }
        /// <summary>
        /// True when requesting regional connection strings in PDB connect info, applicable to cross-region DG only.
        /// </summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"True when requesting regional connection strings in PDB connect info, applicable to cross-region DG only.",
        SerializedName = @"isRegional",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsRegional { get; set; }
        /// <summary>The password to encrypt the keys inside the wallet</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The password to encrypt the keys inside the wallet",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString Password { get; set; }

    }
    /// Autonomous Database Generate Wallet resource model.
    internal partial interface IGenerateAutonomousDatabaseWalletDetailsInternal

    {
        /// <summary>The type of wallet to generate.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Single", "All")]
        string GenerateType { get; set; }
        /// <summary>
        /// True when requesting regional connection strings in PDB connect info, applicable to cross-region DG only.
        /// </summary>
        bool? IsRegional { get; set; }
        /// <summary>The password to encrypt the keys inside the wallet</summary>
        System.Security.SecureString Password { get; set; }

    }
}